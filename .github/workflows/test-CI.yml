name: Test Library CI

on:
  # Trigger the workflow on push to the specific branches
  push:
    branches:
      - dev
      - main
      - Nadav/CAD-22801/create_CI-library_workflow

  # Trigger the workflow on pull requests targeting the specific branches
  pull_request:
    branches:
      - dev
      - main
      - Nadav/CAD-22801/create_CI-library_workflow

  # Add a manual trigger option for running the workflow
  workflow_dispatch:

jobs:
  test:
    permissions:
      id-token: write
      contents: read

    env:
      PROD_M2M_SECRET_ARN: ${{ secrets.PROD_M2M_SECRET_ARN }}  # Passing secrets
      NIGHTLY_M2M_SECRET_ARN: ${{ secrets.NIGHTLY_M2M_SECRET_ARN }}  # Passing secrets
      AWS_ROLE: ${{ secrets.AWS_ROLE }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Decide environment based on the target branch for both push and pull_request events
      - name: Set environment based on target branch
        run: |
          # For pull requests, use the target branch (base.ref)
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            target_branch="${{ github.event.pull_request.base.ref }}"
          else
            # For pushes, the ref represents the target branch directly
            target_branch="${{ github.ref_name }}"
          fi

          # Determine environment based on the target branch
          if [[ "$target_branch" == "dev" ]]; then
            echo "env=nightly" >> $GITHUB_ENV
            echo "Running on nightly environment."
          elif [[ "$target_branch" == "main" ]]; then
            echo "env=prod" >> $GITHUB_ENV
            echo "Running on prod environment."
          else
            echo "env=dev" >> $GITHUB_ENV  # Default to dev for other branches
            echo "Running on dev environment."
          fi
        shell: bash

      # Step to detect changed .ipynb files
      - name: Get changed notebook files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.ipynb

      # Create a comma-separated list of notebooks if any files have changed
      - name: Create comma-separated list of notebooks
        run: |
          if [ -n "${{ steps.changed-files.outputs.all_changed_files }}" ]; then
            notebooks=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' ',')
            echo "NOTEBOOKS_TO_RUN=$notebooks" >> $GITHUB_ENV
          else
            echo "No notebooks changed."
          fi

      # Install dependencies and run tests only if notebooks have changed
      - name: Install dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        run: .github/scripts/install_deps.sh
        shell: bash

      # Configure AWS Credentials only if notebooks have changed
      - name: Configure AWS Credentials
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: us-east-1
          mask-aws-account-id: true

      # Run notebook tests if any changed notebooks are detected
      - name: Run notebook tests
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: ./.github/actions/run-tests  # Calls your composite action
        with:
          env: ${{ env.env }}  # Uses the env set by branch logic
          notebooks: ${{ env.NOTEBOOKS_TO_RUN }}  # Pass the comma-separated list of notebooks
          prod_m2m_secret_arn: ${{ env.PROD_M2M_SECRET_ARN }}
          nightly_m2m_secret_arn: ${{ env.NIGHTLY_M2M_SECRET_ARN }}
          aws_role: ${{ env.AWS_ROLE }}

      # Optionally print the list of changed notebooks
      - name: Print changed notebooks
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Changed notebooks:"
          echo "${{ env.NOTEBOOKS_TO_RUN }}"