qfunc quantum_coin_flip(coin: qbit) {
  H(coin);
}

qfunc quantum_step_clockwise(x: qbit[]) {
  within {
    qft(x);
  } apply {
    repeat (i: x.len) {
      PHASE<((2 * pi) * (2 ** i)) / (2 ** x.len)>(x[i]);
    }
  }
}

qfunc discrete_quantum_walk_circle<time: int>(x: qbit[]) {
  coin: qnum;
  allocate<1>(coin);
  power (time) {
    quantum_coin_flip(coin);
    control (coin == 0) {
      quantum_step_clockwise(x);
    }
    control (coin == 1) {
      invert {
        quantum_step_clockwise(x);
      }
    }
  }
}

qfunc main<t: int>(output x: qnum) {
  allocate_num<floor(log(128, 2)), True, 0>(x);
  discrete_quantum_walk_circle<t>(x);
}

cscope ```
save({'run': sample({'t': 50})})
```
