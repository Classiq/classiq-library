qfunc quantum_coin_flip(coin: qbit) {
  H(coin);
}

qfunc quantum_step_clockwise(permutable x: qbit[]) {
  within {
    qft(x);
  } apply {
    repeat (i: x.len) {
      PHASE(((2 * pi) * (2 ** i)) / (2 ** x.len), x[i]);
    }
  }
}

qfunc discrete_quantum_walk_circle(time: int, x: qbit[]) {
  coin: qbit;
  allocate(coin);
  power (time) {
    quantum_coin_flip(coin);
    control (coin == 0) {
      quantum_step_clockwise(x);
    } else {
      invert {
        quantum_step_clockwise(x);
      }
    }
  }
}

qfunc main(t: int, output x: qnum<floor(log(128, 2)), SIGNED, 0>) {
  allocate(x);
  discrete_quantum_walk_circle(t, x);
}
