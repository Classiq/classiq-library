qfunc prepare_minus(output target: qbit) {
  allocate(1, target);
  X(target);
  H(target);
}

qfunc bv_predicate(a: int, x: qbit[], res: qbit) {
  repeat (i: x.len) {
    if ((floor(a / (2 ** i)) % 2) == 1) {
      CX(x[i], res);
    } else {
      IDENTITY(res);
    }
  }
}

qfunc bv_function(a: int, x: qbit[]) {
  aux: qbit;
  within {
    prepare_minus(aux);
  } apply {
    bv_predicate(a, x, aux);
  }
}

qfunc main(output x: qnum) {
  allocate(5, x);
  hadamard_transform(x);
  bv_function(13, x);
  hadamard_transform(x);
}
