{
  "outputs": {
    "qasm": "// Generated by Classiq.\n// Classiq version: 0.0.0\n// Creation timestamp: 2023-08-23T07:30:02.744736+00:00\n// Random seed: 206755496\n\nOPENQASM 2.0;\ninclude \"qelib1.inc\";\ngate r1tof q0,q1,q2 {\n  h q2;\n  t q2;\n  cx q1,q2;\n  tdg q2;\n  cx q0,q2;\n  t q2;\n  cx q1,q2;\n  tdg q2;\n  h q2;\n}\n\ngate statepreparation_1_bellstatepreparation q0,q1 {\n  x q1;\n  h q0;\n  cx q0,q1;\n}\n\ngate statepreparation_0_bellstatepreparation q0,q1 {\n  h q0;\n  cx q0,q1;\n}\n\ngate statepreparation_0 q0,q1 {\n  statepreparation_0_bellstatepreparation q0,q1;\n}\n\ngate statepreparation_1 q0,q1 {\n  statepreparation_1_bellstatepreparation q0,q1;\n}\n\ngate adder q0,q1,q2,q3,q4,q5,q6,q7 {\n  cx q0,q4;\n  cx q1,q5;\n  cx q3,q5;\n  cx q3,q7;\n  r1tof q2,q4,q7;\n  cx q3,q6;\n  ccx q7,q5,q6;\n  cx q7,q5;\n  r1tof q2,q4,q7;\n  cx q3,q7;\n  cx q2,q4;\n  cx q3,q5;\n}\n\nqreg q[8];\nstatepreparation_0 q[0],q[1];\nstatepreparation_1 q[2],q[3];\nadder q[2],q[3],q[0],q[1],q[4],q[5],q[6],q[7];\n"
  },
  "qasm_version": "2.0",
  "version": "0.0.0",
  "hardware_data": {
    "basis_gates": [
      "x",
      "h",
      "u2",
      "sdg",
      "u1",
      "y",
      "id",
      "s",
      "cx",
      "sx",
      "rz",
      "u",
      "rx",
      "tdg",
      "cy",
      "ry",
      "cz",
      "sxdg",
      "p",
      "t",
      "z"
    ],
    "connectivity_map": null,
    "is_symmetric_connectivity": true,
    "backend_data": null
  },
  "data": {
    "width": 8,
    "circuit_parameters": [],
    "qubit_mapping": {
      "logical_inputs": {},
      "logical_outputs": {
        "a": [0, 1],
        "b": [2, 3],
        "sum": [4, 5, 6]
      },
      "physical_inputs": {},
      "physical_outputs": {
        "a": [0, 1],
        "b": [2, 3],
        "sum": [4, 5, 6]
      }
    },
    "execution_data": null
  },
  "initial_values": null,
  "model": {
    "version": "0.0.0",
    "types": [],
    "constants": [],
    "classical_execution_code": "result = sample()\nsave({'result': result})",
    "execution_preferences": {
      "timeout_sec": null,
      "amplitude_amplification": {
        "iterations": [],
        "growth_rate": 1.25,
        "sample_from_iterations": false,
        "num_of_highest_probability_states_to_check": 1
      },
      "optimizer_preferences": null,
      "error_mitigation_method": null,
      "noise_properties": null,
      "random_seed": 1643585681,
      "backend_preferences": {
        "backend_service_provider": "IBM Quantum",
        "backend_name": "aer_simulator_statevector",
        "access_token": null,
        "provider": {
          "hub": "ibm-q",
          "group": "open",
          "project": "main"
        }
      },
      "num_shots": null,
      "transpile_to_hardware": "decompose"
    },
    "kind": "synthesis",
    "functions": [
      {
        "name": "main",
        "port_declarations": {
          "a": {
            "name": "a",
            "direction": "output",
            "size": 2,
            "is_signed": false,
            "fraction_places": {
              "expr": "0"
            }
          },
          "b": {
            "name": "b",
            "direction": "output",
            "size": 2,
            "is_signed": false,
            "fraction_places": {
              "expr": "0"
            }
          },
          "sum": {
            "name": "sum",
            "direction": "output",
            "size": 3,
            "is_signed": false,
            "fraction_places": {
              "expr": "0"
            }
          }
        },
        "parameters": [],
        "input_ports_wiring": {},
        "output_ports_wiring": {
          "a": "a_output_Identity:a->Output:a",
          "b": "b_output_Identity:b->Output:b",
          "sum": "sum_output_Identity:sum->Output:sum"
        },
        "body": [
          {
            "function": "StatePreparation",
            "params": {},
            "function_params": {
              "amplitudes": null,
              "probabilities": {
                "pmf": [0.5, 0.0, 0.0, 0.5]
              },
              "error_metric": {
                "KL": {
                  "lower_bound": null,
                  "upper_bound": 0.01
                }
              }
            },
            "is_inverse": false,
            "strict_zero_ios": true,
            "release_by_inverse": false,
            "control_states": [],
            "should_control": true,
            "inputs": {},
            "inouts": {},
            "outputs": {
              "OUT[0]": "StatePreparation_cs4id_VY7onM:OUT[0]->Adder_cs4id_iLWQCl:left_arg[0]",
              "OUT[1]": "StatePreparation_cs4id_VY7onM:OUT[1]->Adder_cs4id_iLWQCl:left_arg[1]"
            },
            "power": 1,
            "name": "StatePreparation_cs4id_VY7onM"
          },
          {
            "function": "StatePreparation",
            "params": {},
            "function_params": {
              "amplitudes": null,
              "probabilities": {
                "pmf": [0.0, 0.5, 0.5, 0.0]
              },
              "error_metric": {
                "KL": {
                  "lower_bound": null,
                  "upper_bound": 0.01
                }
              }
            },
            "is_inverse": false,
            "strict_zero_ios": true,
            "release_by_inverse": false,
            "control_states": [],
            "should_control": true,
            "inputs": {},
            "inouts": {},
            "outputs": {
              "OUT[0]": "StatePreparation_cs4id_LPxWCu:OUT[0]->Adder_cs4id_iLWQCl:right_arg[0]",
              "OUT[1]": "StatePreparation_cs4id_LPxWCu:OUT[1]->Adder_cs4id_iLWQCl:right_arg[1]"
            },
            "power": 1,
            "name": "StatePreparation_cs4id_LPxWCu"
          },
          {
            "function": "Adder",
            "params": {},
            "function_params": {
              "output_size": null,
              "left_arg": {
                "size": 2,
                "is_signed": false,
                "fraction_places": 0,
                "bounds": [0.0, 3.0]
              },
              "right_arg": {
                "size": 2,
                "is_signed": false,
                "fraction_places": 0,
                "bounds": [0.0, 3.0]
              },
              "inplace_arg": null
            },
            "is_inverse": false,
            "strict_zero_ios": true,
            "release_by_inverse": false,
            "control_states": [],
            "should_control": true,
            "inputs": {
              "left_arg[0]": "StatePreparation_cs4id_VY7onM:OUT[0]->Adder_cs4id_iLWQCl:left_arg[0]",
              "left_arg[1]": "StatePreparation_cs4id_VY7onM:OUT[1]->Adder_cs4id_iLWQCl:left_arg[1]",
              "right_arg[0]": "StatePreparation_cs4id_LPxWCu:OUT[0]->Adder_cs4id_iLWQCl:right_arg[0]",
              "right_arg[1]": "StatePreparation_cs4id_LPxWCu:OUT[1]->Adder_cs4id_iLWQCl:right_arg[1]"
            },
            "inouts": {},
            "outputs": {
              "left_arg[0]": "Adder_cs4id_iLWQCl:left_arg[0]->a_output_Identity:a[0]",
              "left_arg[1]": "Adder_cs4id_iLWQCl:left_arg[1]->a_output_Identity:a[1]",
              "right_arg[0]": "Adder_cs4id_iLWQCl:right_arg[0]->b_output_Identity:b[0]",
              "right_arg[1]": "Adder_cs4id_iLWQCl:right_arg[1]->b_output_Identity:b[1]",
              "sum[0]": "Adder_cs4id_iLWQCl:sum[0]->sum_output_Identity:sum[0]",
              "sum[1]": "Adder_cs4id_iLWQCl:sum[1]->sum_output_Identity:sum[1]",
              "sum[2]": "Adder_cs4id_iLWQCl:sum[2]->sum_output_Identity:sum[2]"
            },
            "power": 1,
            "name": "Adder_cs4id_iLWQCl"
          },
          {
            "function": "Identity",
            "params": {},
            "function_params": {
              "arguments": [
                {
                  "size": 2,
                  "is_signed": false,
                  "fraction_places": 0,
                  "bounds": [0.0, 3.0],
                  "name": "a"
                }
              ]
            },
            "is_inverse": false,
            "strict_zero_ios": true,
            "release_by_inverse": false,
            "control_states": [],
            "should_control": true,
            "inputs": {
              "a[0]": "Adder_cs4id_iLWQCl:left_arg[0]->a_output_Identity:a[0]",
              "a[1]": "Adder_cs4id_iLWQCl:left_arg[1]->a_output_Identity:a[1]"
            },
            "inouts": {},
            "outputs": {
              "a": "a_output_Identity:a->Output:a"
            },
            "power": 1,
            "name": "a_output_Identity"
          },
          {
            "function": "Identity",
            "params": {},
            "function_params": {
              "arguments": [
                {
                  "size": 2,
                  "is_signed": false,
                  "fraction_places": 0,
                  "bounds": [0.0, 3.0],
                  "name": "b"
                }
              ]
            },
            "is_inverse": false,
            "strict_zero_ios": true,
            "release_by_inverse": false,
            "control_states": [],
            "should_control": true,
            "inputs": {
              "b[0]": "Adder_cs4id_iLWQCl:right_arg[0]->b_output_Identity:b[0]",
              "b[1]": "Adder_cs4id_iLWQCl:right_arg[1]->b_output_Identity:b[1]"
            },
            "inouts": {},
            "outputs": {
              "b": "b_output_Identity:b->Output:b"
            },
            "power": 1,
            "name": "b_output_Identity"
          },
          {
            "function": "Identity",
            "params": {},
            "function_params": {
              "arguments": [
                {
                  "size": 3,
                  "is_signed": false,
                  "fraction_places": 0,
                  "bounds": [0.0, 7.0],
                  "name": "sum"
                }
              ]
            },
            "is_inverse": false,
            "strict_zero_ios": true,
            "release_by_inverse": false,
            "control_states": [],
            "should_control": true,
            "inputs": {
              "sum[0]": "Adder_cs4id_iLWQCl:sum[0]->sum_output_Identity:sum[0]",
              "sum[1]": "Adder_cs4id_iLWQCl:sum[1]->sum_output_Identity:sum[1]",
              "sum[2]": "Adder_cs4id_iLWQCl:sum[2]->sum_output_Identity:sum[2]"
            },
            "inouts": {},
            "outputs": {
              "sum": "sum_output_Identity:sum->Output:sum"
            },
            "power": 1,
            "name": "sum_output_Identity"
          }
        ]
      }
    ],
    "constraints": {
      "max_width": null,
      "max_depth": null,
      "max_gate_count": {},
      "optimization_parameter": "depth"
    },
    "preferences": {
      "backend_service_provider": null,
      "backend_name": null,
      "custom_hardware_settings": {
        "basis_gates": [
          "cx",
          "sx",
          "ry",
          "x",
          "rz",
          "h",
          "p",
          "u2",
          "y",
          "cz",
          "u",
          "s",
          "sdg",
          "rx",
          "cy",
          "t",
          "tdg",
          "z",
          "id",
          "sxdg",
          "u1"
        ],
        "connectivity_map": null,
        "is_symmetric_connectivity": true
      },
      "debug_mode": true,
      "output_format": ["qasm"],
      "pretty_qasm": true,
      "qasm3": null,
      "transpilation_option": "auto optimize",
      "timeout_seconds": 300,
      "optimization_timeout_seconds": null,
      "random_seed": 206755496
    }
  },
  "circuit_type": "generated",
  "transpiled_circuit": {
    "outputs": {
      "qasm": "// Generated by Classiq.\n// Classiq version: 0.0.0\n// Creation timestamp: 2023-08-23T07:30:02.756417+00:00\n// Random seed: 206755496\n\nOPENQASM 2.0;\ninclude \"qelib1.inc\";\n\nqreg q[8];\nu3(0.5*pi,0.0*pi,1.0*pi) q[0];\nu3(0.5*pi,0.0*pi,1.0*pi) q[2];\nu3(1.0*pi,1.5*pi,0.5*pi) q[3];\ncx q[0],q[1];\ncx q[2],q[3];\ncx q[2],q[4];\ncx q[3],q[5];\ncx q[1],q[5];\ncx q[1],q[7];\nu3(0.0*pi,1.5*pi,0.75*pi) q[5];\ncx q[1],q[6];\nu3(3.5*pi,1.25*pi,0.0*pi) q[7];\ncx q[4],q[7];\nu3(0.5*pi,0.0*pi,1.0*pi) q[6];\ncx q[5],q[6];\nu3(0.0*pi,1.5*pi,0.25*pi) q[7];\ncx q[0],q[7];\nu3(0.0*pi,1.5*pi,0.25*pi) q[6];\nu3(0.0*pi,1.5*pi,0.75*pi) q[7];\ncx q[4],q[7];\nu3(0.5*pi,0.25*pi,0.75*pi) q[7];\ncx q[7],q[6];\nu3(0.0*pi,1.5*pi,0.75*pi) q[6];\ncx q[5],q[6];\nu3(0.0*pi,1.5*pi,0.25*pi) q[6];\ncx q[7],q[6];\ncx q[7],q[5];\nu3(0.5*pi,0.0*pi,1.25*pi) q[6];\nu3(0.0*pi,1.5*pi,0.25*pi) q[5];\nu3(3.5*pi,1.25*pi,0.0*pi) q[7];\ncx q[4],q[7];\nu3(0.0*pi,1.5*pi,0.25*pi) q[7];\ncx q[0],q[7];\nu3(0.0*pi,1.5*pi,0.75*pi) q[7];\ncx q[4],q[7];\ncx q[0],q[4];\nu3(0.5*pi,0.0*pi,0.75*pi) q[7];\ncx q[1],q[7];\ncx q[1],q[5];\n"
    },
    "qasm_version": "2.0",
    "depth": 27,
    "count_ops": {
      "u": 18,
      "cx": 21
    },
    "logical_to_physical_input_qubit_map": [0, 1, 2, 3, 4, 5, 6, 7],
    "logical_to_physical_output_qubit_map": [0, 1, 2, 3, 4, 5, 6, 7]
  },
  "creation_time": "2023-08-23T07:26:02.507943",
  "synthesis_duration": {
    "model_preprocessing": null,
    "preprocessing": 0.06101166701409966,
    "solving": 0.005209958006162196,
    "conversion_to_circuit": 0.0019099159981124103,
    "postprocessing": 0.0518786670290865
  }
}
