qstruct BlockEncodedState {
  block: qnum<2, False, 0>;
  data: qnum<2, False, 0>;
}

qfunc identify_block(state: BlockEncodedState, qubit: qbit) {
  qubit ^= state.block == 0;
}

qfunc apply_pauli_term(pauli_string: PauliTerm, x: qbit[]) {
  repeat (index: x.len) {
    switch(pauli_string.pauli[index], [lambda() {
      IDENTITY(x[(pauli_string.pauli.len - index) - 1]);
    }, lambda() {
      X(x[(pauli_string.pauli.len - index) - 1]);
    }, lambda() {
      Y(x[(pauli_string.pauli.len - index) - 1]);
    }, lambda() {
      Z(x[(pauli_string.pauli.len - index) - 1]);
    }]);
  }
}

qfunc lcu_paulis(pauli_terms_list: PauliTerm[], probs: real[], block: qnum, data: qbit[]) {
  within {
    inplace_prepare_state(probs, 0.0, block);
  } apply {
    repeat (i: pauli_terms_list.len) {
      control (block == i) {
        apply_pauli_term(pauli_terms_list[i], data);
      }
    }
  }
}

qfunc block_encode_hamiltonian(state: BlockEncodedState) {
  lcu_paulis([
    PauliTerm {
      pauli=[Pauli::I, Pauli::I],
      coefficient=0.4
    },
    PauliTerm {
      pauli=[Pauli::I, Pauli::Z],
      coefficient=0.1
    },
    PauliTerm {
      pauli=[Pauli::X, Pauli::X],
      coefficient=0.05
    },
    PauliTerm {
      pauli=[Pauli::Z, Pauli::Z],
      coefficient=0.2
    }
  ], [
    0.533333333333,
    0.133333333333,
    0.066666666667,
    0.266666666667
  ], state.block, state.data);
}

qfunc my_qsvt(phases: real[], qsvt_aux: qbit, state: BlockEncodedState) {
  qsvt(phases, identify_block, identify_block, block_encode_hamiltonian, state, qsvt_aux);
}

qfunc main(output qsvt_aux: qbit, output block_exp: qbit, output state: BlockEncodedState) {
  allocate(1, qsvt_aux);
  allocate(1, block_exp);
  allocate(state.size, state);
  inplace_prepare_amplitudes([
    0.41828292898,
    0.722188826042,
    0.029961060109,
    0.550077290698
  ], 0.0, state.data);
  within {
    H(block_exp);
  } apply {
    control (block_exp == 0) {
      my_qsvt([
        4.706742805919,
        3.183364187246,
        2.955372229367,
        3.513111260809,
        3.124815932204,
        2.902468305789,
        2.861184311065,
        2.902468305789,
        3.124815932204,
        3.513111260809,
        2.955372229367,
        3.183364187246,
        (-36.133961690749)
      ], qsvt_aux, state);
    }
    control (block_exp == 1) {
      U(0, 0, 0, pi / 2, qsvt_aux);
      my_qsvt([
        4.710572127328,
        3.157751559463,
        3.04636307197,
        3.441942229235,
        2.850010365111,
        2.868880288382,
        2.998128354139,
        2.998128354139,
        2.868880288382,
        2.850010365111,
        3.441942229235,
        3.04636307197,
        3.157751559463,
        (-39.271725022929)
      ], qsvt_aux, state);
    }
  }
}
