qstruct QAOAVars {
  x_0: qnum<2, False, 0>;
  x_1: qnum<2, False, 0>;
  x_2: qnum<2, False, 0>;
  monotone_rule_1_slack_var_0: qbit;
  monotone_rule_2_slack_var_0: qbit;
}



qfunc main(params: real[6], output v: QAOAVars) {
  allocate(v.size, v);
  hadamard_transform(v);
  repeat (i: 3) {
    phase (-(((((((((10 * v.x_0) * v.x_1) + ((10 * v.x_0) * v.x_2)) - v.x_0) + ((10 * v.x_1) * v.x_2)) - (2 * v.x_1)) - (3 * v.x_2)) + (10 * (((((v.monotone_rule_1_slack_var_0 + v.x_0) + v.x_1) + v.x_2) - 1.0) ** 2))) + (10 * (((((v.monotone_rule_2_slack_var_0 + v.x_0) + v.x_1) + v.x_2) - 1.0) ** 2))), params[i]);
    apply_to_all(lambda(q) {
      RX(params[3 + i], q);
    }, v);
  }
}
