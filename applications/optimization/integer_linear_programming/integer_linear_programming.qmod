qstruct QAOAVars {
  x: qnum<2, False, 0>[3];
  monotone_rule_1_slack_var: qbit[1];
  monotone_rule_2_slack_var: qbit[1];
}

qfunc main(params: real[6], output v: QAOAVars) {
  allocate(v.size, v);
  hadamard_transform(v);
  repeat (i: 3) {
    phase (-(((((((((10 * v.x[0]) * v.x[1]) + ((10 * v.x[0]) * v.x[2])) - v.x[0]) + ((10 * v.x[1]) * v.x[2])) - (2 * v.x[1])) - (3 * v.x[2])) + (10 * (((((v.monotone_rule_1_slack_var[0] + v.x[0]) + v.x[1]) + v.x[2]) - 1.0) ** 2))) + (10 * (((((v.monotone_rule_2_slack_var[0] + v.x[0]) + v.x[1]) + v.x[2]) - 1.0) ** 2))), params[i]);
    apply_to_all(lambda(q) {
      RX(params[3 + i], q);
    }, v);
  }
}
