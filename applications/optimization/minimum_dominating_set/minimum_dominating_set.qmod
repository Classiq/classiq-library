qstruct QAOAVars {
  x: qbit[6];
  dominating_rule_0_slack_var: qbit[2];
  dominating_rule_1_slack_var: qbit[2];
  dominating_rule_2_slack_var: qbit[3];
  dominating_rule_3_slack_var: qbit[2];
  dominating_rule_4_slack_var: qbit[3];
  dominating_rule_5_slack_var: qbit[2];
}

qfunc main(params: real[12], output v: QAOAVars) {
  allocate(v.size, v);
  hadamard_transform(v);
  repeat (i: 6) {
    phase (-(((((((((((v.x[0] + v.x[1]) + v.x[2]) + v.x[3]) + v.x[4]) + v.x[5]) + (20 * (((((((v.dominating_rule_0_slack_var[0] + (2 * v.dominating_rule_0_slack_var[1])) - v.x[0]) - v.x[1]) - v.x[3]) - v.x[5]) + 1.0) ** 2))) + (20 * (((((((v.dominating_rule_1_slack_var[0] + (2 * v.dominating_rule_1_slack_var[1])) - v.x[0]) - v.x[1]) - v.x[2]) - v.x[4]) + 1.0) ** 2))) + (20 * (((((((v.dominating_rule_3_slack_var[0] + (2 * v.dominating_rule_3_slack_var[1])) - v.x[0]) - v.x[2]) - v.x[3]) - v.x[4]) + 1.0) ** 2))) + (20 * (((((((v.dominating_rule_5_slack_var[0] + (2 * v.dominating_rule_5_slack_var[1])) - v.x[0]) - v.x[2]) - v.x[4]) - v.x[5]) + 1.0) ** 2))) + (20 * (((((((((v.dominating_rule_2_slack_var[0] + (2 * v.dominating_rule_2_slack_var[1])) + v.dominating_rule_2_slack_var[2]) - v.x[1]) - v.x[2]) - v.x[3]) - v.x[4]) - v.x[5]) + 1.0) ** 2))) + (20 * (((((((((v.dominating_rule_4_slack_var[0] + (2 * v.dominating_rule_4_slack_var[1])) + v.dominating_rule_4_slack_var[2]) - v.x[1]) - v.x[2]) - v.x[3]) - v.x[4]) - v.x[5]) + 1.0) ** 2))), params[i]);
    apply_to_all(lambda(q) {
      RX(params[6 + i], q);
    }, v);
  }
}
