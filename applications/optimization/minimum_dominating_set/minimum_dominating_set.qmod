qstruct QAOAVars {
  x_0: qbit;
  x_1: qbit;
  x_2: qbit;
  x_3: qbit;
  x_4: qbit;
  x_5: qbit;
  dominating_rule_0_slack_var_0: qbit;
  dominating_rule_0_slack_var_1: qbit;
  dominating_rule_1_slack_var_0: qbit;
  dominating_rule_1_slack_var_1: qbit;
  dominating_rule_2_slack_var_0: qbit;
  dominating_rule_2_slack_var_1: qbit;
  dominating_rule_2_slack_var_2: qbit;
  dominating_rule_3_slack_var_0: qbit;
  dominating_rule_3_slack_var_1: qbit;
  dominating_rule_4_slack_var_0: qbit;
  dominating_rule_4_slack_var_1: qbit;
  dominating_rule_4_slack_var_2: qbit;
  dominating_rule_5_slack_var_0: qbit;
  dominating_rule_5_slack_var_1: qbit;
}



qfunc main(params: real[12], output v: QAOAVars) {
  allocate(v.size, v);
  hadamard_transform(v);
  repeat (i: 6) {
    phase (-(((((((((((v.x_0 + v.x_1) + v.x_2) + v.x_3) + v.x_4) + v.x_5) + (80 * ((((((((v.dominating_rule_0_slack_var_0 / 2) + v.dominating_rule_0_slack_var_1) - (v.x_0 / 2)) - (v.x_1 / 2)) - (v.x_3 / 2)) - (v.x_5 / 2)) + 0.5) ** 2))) + (80 * ((((((((v.dominating_rule_1_slack_var_0 / 2) + v.dominating_rule_1_slack_var_1) - (v.x_0 / 2)) - (v.x_1 / 2)) - (v.x_2 / 2)) - (v.x_4 / 2)) + 0.5) ** 2))) + (80 * ((((((((v.dominating_rule_3_slack_var_0 / 2) + v.dominating_rule_3_slack_var_1) - (v.x_0 / 2)) - (v.x_2 / 2)) - (v.x_3 / 2)) - (v.x_4 / 2)) + 0.5) ** 2))) + (80 * ((((((((v.dominating_rule_5_slack_var_0 / 2) + v.dominating_rule_5_slack_var_1) - (v.x_0 / 2)) - (v.x_2 / 2)) - (v.x_4 / 2)) - (v.x_5 / 2)) + 0.5) ** 2))) + (80 * ((((((((((v.dominating_rule_2_slack_var_0 / 2) + v.dominating_rule_2_slack_var_1) + (v.dominating_rule_2_slack_var_2 / 2)) - (v.x_1 / 2)) - (v.x_2 / 2)) - (v.x_3 / 2)) - (v.x_4 / 2)) - (v.x_5 / 2)) + 0.5) ** 2))) + (80 * ((((((((((v.dominating_rule_4_slack_var_0 / 2) + v.dominating_rule_4_slack_var_1) + (v.dominating_rule_4_slack_var_2 / 2)) - (v.x_1 / 2)) - (v.x_2 / 2)) - (v.x_3 / 2)) - (v.x_4 / 2)) - (v.x_5 / 2)) + 0.5) ** 2))), params[i]);
    apply_to_all(lambda(q) {
      RX(params[6 + i], q);
    }, v);
  }
}
