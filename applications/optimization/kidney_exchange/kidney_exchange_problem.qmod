qstruct QAOAVars {
  x_donor1_patient1: qbit;
  x_donor1_patient2: qbit;
  x_donor1_patient3: qbit;
  x_donor2_patient1: qbit;
  x_donor2_patient2: qbit;
  x_donor2_patient3: qbit;
  x_donor3_patient1: qbit;
  x_donor3_patient2: qbit;
  x_donor3_patient3: qbit;
}

qfunc main(params: real[10], output v: QAOAVars) {
  allocate(v.size, v);
  hadamard_transform(v);
  repeat (i: 5) {
    phase (-((((((((((((((((((((((((((((4 * v.x_donor1_patient1) * v.x_donor1_patient2) + ((4 * v.x_donor1_patient1) * v.x_donor1_patient3)) + ((4 * v.x_donor1_patient1) * v.x_donor2_patient1)) + ((4 * v.x_donor1_patient1) * v.x_donor3_patient1)) - (0.9 * v.x_donor1_patient1)) + ((4 * v.x_donor1_patient2) * v.x_donor1_patient3)) + ((4 * v.x_donor1_patient2) * v.x_donor2_patient2)) + ((4 * v.x_donor1_patient2) * v.x_donor3_patient2)) - (0.7 * v.x_donor1_patient2)) + ((4 * v.x_donor1_patient3) * v.x_donor2_patient3)) + ((4 * v.x_donor1_patient3) * v.x_donor3_patient3)) - (0.6 * v.x_donor1_patient3)) + ((4 * v.x_donor2_patient1) * v.x_donor2_patient2)) + ((4 * v.x_donor2_patient1) * v.x_donor2_patient3)) + ((4 * v.x_donor2_patient1) * v.x_donor3_patient1)) - (0.8 * v.x_donor2_patient1)) + ((4 * v.x_donor2_patient2) * v.x_donor2_patient3)) + ((4 * v.x_donor2_patient2) * v.x_donor3_patient2)) - (0.75 * v.x_donor2_patient2)) + ((4 * v.x_donor2_patient3) * v.x_donor3_patient3)) - (0.65 * v.x_donor2_patient3)) + ((4 * v.x_donor3_patient1) * v.x_donor3_patient2)) + ((4 * v.x_donor3_patient1) * v.x_donor3_patient3)) - (0.85 * v.x_donor3_patient1)) + ((4 * v.x_donor3_patient2) * v.x_donor3_patient3)) - (0.8 * v.x_donor3_patient2)) - (0.7 * v.x_donor3_patient3)), params[i]);
    apply_to_all(lambda(q) {
      RX(params[5 + i], q);
    }, v);
  }
}
