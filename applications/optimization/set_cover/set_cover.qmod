qstruct QAOAVars {
  x_0: qbit;
  x_1: qbit;
  x_2: qbit;
  x_3: qbit;
  x_4: qbit;
  x_5: qbit;
  x_6: qbit;
  x_7: qbit;
  independent_rule_1_slack_var_0: qbit;
  independent_rule_2_slack_var_0: qbit;
  independent_rule_2_slack_var_1: qbit;
  independent_rule_3_slack_var_0: qbit;
  independent_rule_3_slack_var_1: qbit;
  independent_rule_4_slack_var_0: qbit;
  independent_rule_4_slack_var_1: qbit;
  independent_rule_5_slack_var_0: qbit;
  independent_rule_6_slack_var_0: qbit;
  independent_rule_7_slack_var_0: qbit;
  independent_rule_7_slack_var_1: qbit;
  independent_rule_8_slack_var_0: qbit;
  independent_rule_8_slack_var_1: qbit;
  independent_rule_9_slack_var_0: qbit;
  independent_rule_10_slack_var_0: qbit;
}



qfunc main(params: real[6], output v: QAOAVars) {
  allocate(v.size, v);
  hadamard_transform(v);
  repeat (i: 3) {
    phase (-(((((((((((((((((v.x_0 + v.x_1) + v.x_2) + v.x_3) + v.x_4) + v.x_5) + v.x_6) + v.x_7) + (20 * ((((v.independent_rule_10_slack_var_0 - v.x_3) - v.x_6) + 1.0) ** 2))) + (20 * ((((v.independent_rule_1_slack_var_0 - v.x_0) - v.x_4) + 1.0) ** 2))) + (20 * ((((v.independent_rule_5_slack_var_0 - v.x_1) - v.x_7) + 1.0) ** 2))) + (20 * ((((v.independent_rule_6_slack_var_0 - v.x_2) - v.x_4) + 1.0) ** 2))) + (20 * ((((v.independent_rule_9_slack_var_0 - v.x_3) - v.x_5) + 1.0) ** 2))) + (20 * ((((((v.independent_rule_2_slack_var_0 + v.independent_rule_2_slack_var_1) - v.x_0) - v.x_1) - v.x_7) + 1.0) ** 2))) + (20 * ((((((v.independent_rule_3_slack_var_0 + v.independent_rule_3_slack_var_1) - v.x_0) - v.x_1) - v.x_5) + 1.0) ** 2))) + (20 * ((((((v.independent_rule_4_slack_var_0 + v.independent_rule_4_slack_var_1) - v.x_0) - v.x_1) - v.x_6) + 1.0) ** 2))) + (20 * ((((((v.independent_rule_7_slack_var_0 + v.independent_rule_7_slack_var_1) - v.x_2) - v.x_5) - v.x_6) + 1.0) ** 2))) + (20 * ((((((v.independent_rule_8_slack_var_0 + v.independent_rule_8_slack_var_1) - v.x_3) - v.x_4) - v.x_7) + 1.0) ** 2))), params[i]);
    apply_to_all(lambda(q) {
      RX(params[3 + i], q);
    }, v);
  }
}
