qstruct QAOAVars {
  x: qbit[8];
  independent_rule_1_slack_var: qbit[1];
  independent_rule_2_slack_var: qbit[2];
  independent_rule_3_slack_var: qbit[2];
  independent_rule_4_slack_var: qbit[2];
  independent_rule_5_slack_var: qbit[1];
  independent_rule_6_slack_var: qbit[1];
  independent_rule_7_slack_var: qbit[2];
  independent_rule_8_slack_var: qbit[2];
  independent_rule_9_slack_var: qbit[1];
  independent_rule_10_slack_var: qbit[1];
}

qfunc main(params: real[6], output v: QAOAVars) {
  allocate(v.size, v);
  hadamard_transform(v);
  repeat (i: 3) {
    phase (-(((((((((((((((((v.x[0] + v.x[1]) + v.x[2]) + v.x[3]) + v.x[4]) + v.x[5]) + v.x[6]) + v.x[7]) + (20 * ((((v.independent_rule_10_slack_var[0] - v.x[3]) - v.x[6]) + 1.0) ** 2))) + (20 * ((((v.independent_rule_1_slack_var[0] - v.x[0]) - v.x[4]) + 1.0) ** 2))) + (20 * ((((v.independent_rule_5_slack_var[0] - v.x[1]) - v.x[7]) + 1.0) ** 2))) + (20 * ((((v.independent_rule_6_slack_var[0] - v.x[2]) - v.x[4]) + 1.0) ** 2))) + (20 * ((((v.independent_rule_9_slack_var[0] - v.x[3]) - v.x[5]) + 1.0) ** 2))) + (20 * ((((((v.independent_rule_2_slack_var[0] + v.independent_rule_2_slack_var[1]) - v.x[0]) - v.x[1]) - v.x[7]) + 1.0) ** 2))) + (20 * ((((((v.independent_rule_3_slack_var[0] + v.independent_rule_3_slack_var[1]) - v.x[0]) - v.x[1]) - v.x[5]) + 1.0) ** 2))) + (20 * ((((((v.independent_rule_4_slack_var[0] + v.independent_rule_4_slack_var[1]) - v.x[0]) - v.x[1]) - v.x[6]) + 1.0) ** 2))) + (20 * ((((((v.independent_rule_7_slack_var[0] + v.independent_rule_7_slack_var[1]) - v.x[2]) - v.x[5]) - v.x[6]) + 1.0) ** 2))) + (20 * ((((((v.independent_rule_8_slack_var[0] + v.independent_rule_8_slack_var[1]) - v.x[3]) - v.x[4]) - v.x[7]) + 1.0) ** 2))), params[i]);
    apply_to_all(lambda(q) {
      RX(params[3 + i], q);
    }, v);
  }
}
