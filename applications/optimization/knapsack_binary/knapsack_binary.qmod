hamiltonian: PauliTerm[] = [
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 4.61
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I
    ],
    coefficient = -1.31
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = -0.35
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z
    ],
    coefficient = -0.7
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I
    ],
    coefficient = -0.8
  },
  PauliTerm {
    pauli = [
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = -0.85
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = -0.5
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::Z,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 1.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::Z
    ],
    coefficient = 2.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z
    ],
    coefficient = 2.0
  },
  PauliTerm {
    pauli = [
      Pauli::Z,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 2.0
  },
  PauliTerm {
    pauli = [
      Pauli::Z,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 2.0
  },
  PauliTerm {
    pauli = [
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z
    ],
    coefficient = 4.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::Z,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 2.1
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 2.1
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::Z
    ],
    coefficient = 4.2
  },
  PauliTerm {
    pauli = [
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 4.2
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::Z,
      Pauli::I
    ],
    coefficient = 3.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I
    ],
    coefficient = 3.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::Z
    ],
    coefficient = 6.0
  },
  PauliTerm {
    pauli = [
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I
    ],
    coefficient = 6.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::Z,
      Pauli::I
    ],
    coefficient = 6.3
  }
];

qfunc main<params_list: real[10]>(output target: qbit[6]) {
  allocate<target.len>(target);
  qaoa_penalty<target.len, params_list, hamiltonian>(target);
}

cscope ```

vqe_result = vqe(
hamiltonian=hamiltonian,
maximize=True,
initial_point=[0.0, 0.12820512820512817, 0.03205128205128204, 0.09615384615384612, 0.06410256410256408, 0.06410256410256408, 0.09615384615384612, 0.03205128205128204, 0.12820512820512817, 0.0],
optimizer=Optimizer.COBYLA,
max_iteration=60,
tolerance=0.0,
step_size=0.0,
skip_compute_variance=False,
alpha_cvar=0.7
)

save({"vqe_result": vqe_result, "hamiltonian": hamiltonian})

```
