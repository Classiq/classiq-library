qstruct QAOAVars {
  x_0,0: qbit;
  x_0,1: qbit;
  x_0,2: qbit;
  x_0,3: qbit;
  x_0,4: qbit;
  x_0,5: qbit;
  x_1,0: qbit;
  x_1,1: qbit;
  x_1,2: qbit;
  x_1,3: qbit;
  x_1,4: qbit;
  x_1,5: qbit;
}



qfunc main(params: real[16], output v: QAOAVars) {
  allocate(v.size, v);
  hadamard_transform(v);
  repeat (i: 8) {
    phase (-(((((((((((((((20 * v.x_0,0) * v.x_1,0) + ((20 * v.x_0,1) * v.x_1,1)) + ((20 * v.x_0,2) * v.x_1,2)) + ((20 * v.x_0,3) * v.x_1,3)) + ((20 * v.x_0,4) * v.x_1,4)) + ((20 * v.x_0,5) * v.x_1,5)) + ((1 - v.x_0,0) * (1 - v.x_1,0))) + ((1 - v.x_0,1) * (1 - v.x_1,1))) + ((1 - v.x_0,2) * (1 - v.x_1,2))) + ((1 - v.x_0,3) * (1 - v.x_1,3))) + ((1 - v.x_0,4) * (1 - v.x_1,4))) + ((1 - v.x_0,5) * (1 - v.x_1,5))) + (20 * (((((((((((((v.x_0,0 * ((v.x_0,1 + v.x_0,2) + v.x_0,4)) + (v.x_0,1 * (((v.x_0,0 + v.x_0,2) + v.x_0,3) + v.x_0,5))) + (v.x_0,2 * ((((v.x_0,0 + v.x_0,1) + v.x_0,3) + v.x_0,4) + v.x_0,5))) + (v.x_0,3 * ((v.x_0,1 + v.x_0,2) + v.x_0,4))) + (v.x_0,4 * (((v.x_0,0 + v.x_0,2) + v.x_0,3) + v.x_0,5))) + (v.x_0,5 * ((v.x_0,1 + v.x_0,2) + v.x_0,4))) + (v.x_1,0 * ((v.x_1,1 + v.x_1,2) + v.x_1,4))) + (v.x_1,1 * (((v.x_1,0 + v.x_1,2) + v.x_1,3) + v.x_1,5))) + (v.x_1,2 * ((((v.x_1,0 + v.x_1,1) + v.x_1,3) + v.x_1,4) + v.x_1,5))) + (v.x_1,3 * ((v.x_1,1 + v.x_1,2) + v.x_1,4))) + (v.x_1,4 * (((v.x_1,0 + v.x_1,2) + v.x_1,3) + v.x_1,5))) + (v.x_1,5 * ((v.x_1,1 + v.x_1,2) + v.x_1,4))) ** 2))) - 6), params[i]);
    apply_to_all(lambda(q) {
      RX(params[8 + i], q);
    }, v);
  }
}
