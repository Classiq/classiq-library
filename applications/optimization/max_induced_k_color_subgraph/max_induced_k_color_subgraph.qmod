{
  "functions": [
    {
      "name": "main",
      "param_decls": {
        "params_list": {
          "kind": "array",
          "element_type": {
            "kind": "real"
          },
          "size": 16
        }
      },
      "body": [
        {
          "function": "qaoa_penalty",
          "params": {
            "hamiltonian": {
              "expr": "optimization_problem_to_hamiltonian(get_type(MyCombiProblem), 2.0)"
            },
            "params_list": {
              "expr": "params_list"
            },
            "num_qubits": {
              "expr": "len(get_field(optimization_problem_to_hamiltonian(get_type(MyCombiProblem), 2.0)[0], 'pauli'))"
            },
            "is_st": {
              "expr": "True"
            }
          }
        }
      ]
    }
  ],
  "types": [
    {
      "name": "MyCombiProblem",
      "variables": {
        "x0_0": {
          "kind": "int"
        },
        "x0_1": {
          "kind": "int"
        },
        "x0_2": {
          "kind": "int"
        },
        "x0_3": {
          "kind": "int"
        },
        "x0_4": {
          "kind": "int"
        },
        "x0_5": {
          "kind": "int"
        },
        "x1_0": {
          "kind": "int"
        },
        "x1_1": {
          "kind": "int"
        },
        "x1_2": {
          "kind": "int"
        },
        "x1_3": {
          "kind": "int"
        },
        "x1_4": {
          "kind": "int"
        },
        "x1_5": {
          "kind": "int"
        }
      },
      "constraints": [
        {
          "expr": "Eq(x0_0*(x0_1 + x0_2 + x0_4) + x0_1*(x0_0 + x0_2 + x0_3 + x0_5) + x0_2*(x0_0 + x0_1 + x0_3 + x0_4 + x0_5) + x0_3*(x0_1 + x0_2 + x0_4) + x0_4*(x0_0 + x0_2 + x0_3 + x0_5) + x0_5*(x0_1 + x0_2 + x0_4) + x1_0*(x1_1 + x1_2 + x1_4) + x1_1*(x1_0 + x1_2 + x1_3 + x1_5) + x1_2*(x1_0 + x1_1 + x1_3 + x1_4 + x1_5) + x1_3*(x1_1 + x1_2 + x1_4) + x1_4*(x1_0 + x1_2 + x1_3 + x1_5) + x1_5*(x1_1 + x1_2 + x1_4), 0)"
        },
        {
          "expr": "x0_0 + x1_0 <= 1"
        },
        {
          "expr": "x0_1 + x1_1 <= 1"
        },
        {
          "expr": "x0_2 + x1_2 <= 1"
        },
        {
          "expr": "x0_3 + x1_3 <= 1"
        },
        {
          "expr": "x0_4 + x1_4 <= 1"
        },
        {
          "expr": "x0_5 + x1_5 <= 1"
        }
      ],
      "objective_type": "Max",
      "objective_function": {
        "expr": "-(1 - x0_0)*(1 - x1_0) - (1 - x0_1)*(1 - x1_1) - (1 - x0_2)*(1 - x1_2) - (1 - x0_3)*(1 - x1_3) - (1 - x0_4)*(1 - x1_4) - (1 - x0_5)*(1 - x1_5) + 6"
      }
    }
  ],
  "classical_execution_code": "\nvqe_result = vqe(\n    hamiltonian=optimization_problem_to_hamiltonian(get_type(MyCombiProblem), 2.0),\n    maximize=True,\n    initial_point=compute_qaoa_initial_point(optimization_problem_to_hamiltonian(get_type(MyCombiProblem), 2.0),8),\n    optimizer=Optimizer.COBYLA,\n    max_iteration=20,\n    tolerance=0.0,\n    step_size=0.0,\n    skip_compute_variance=False,\n    alpha_cvar=0.7\n)\nsolution = get_optimization_solution(get_type(MyCombiProblem), vqe_result, 2.0)\nhamiltonian = optimization_problem_to_hamiltonian(get_type(MyCombiProblem), 2.0)\nsave({'solution': solution, \"vqe_result\": vqe_result, \"hamiltonian\": hamiltonian})\n"
}
