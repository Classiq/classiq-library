hamiltonian: PauliTerm[] = [
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 53.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::Z
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::Z,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::Z
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::Z
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::Z,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::I
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::I,
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I
    ],
    coefficient = 10.0
  },
  PauliTerm {
    pauli = [
      Pauli::Z,
      Pauli::I,
      Pauli::I,
      Pauli::I,
      Pauli::Z,
      Pauli::I
    ],
    coefficient = 10.0
  }
];

qfunc main<params_list: real[16]>(output target: qbit[6]) {
  allocate<target.len>(target);
  qaoa_penalty<target.len, params_list, hamiltonian>(target);
}

cscope ```

vqe_result = vqe(
hamiltonian=hamiltonian,
maximize=False,
initial_point=[0.0, 0.05, 0.007142857142857143, 0.042857142857142864, 0.014285714285714285, 0.03571428571428572, 0.02142857142857143, 0.02857142857142857, 0.02857142857142857, 0.021428571428571432, 0.03571428571428571, 0.01428571428571429, 0.04285714285714286, 0.007142857142857145, 0.05, 0.0],
optimizer=Optimizer.COBYLA,
max_iteration=20.0,
tolerance=0.0,
step_size=0.0,
skip_compute_variance=False,
alpha_cvar=0.3
)

save({"vqe_result": vqe_result, "hamiltonian": hamiltonian})

```
