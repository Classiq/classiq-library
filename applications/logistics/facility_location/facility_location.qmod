qstruct QAOAVars {
  x: qbit[4][3];
}

qfunc main(params: real[10], output v: QAOAVars) {
  allocate(v.size, v);
  hadamard_transform(v);
  repeat (i: 5) {
    phase (-(((((((((((((((((0.02 * v.x[0][0]) + (0.14 * v.x[0][1])) + (0.62 * v.x[0][2])) + (0.11 * v.x[0][3])) + (0.99 * v.x[1][0])) + (0.22 * v.x[1][1])) + (0.91 * v.x[1][2])) + (0.09 * v.x[1][3])) + (0.4 * v.x[2][0])) + (0.76 * v.x[2][1])) + (0.95 * v.x[2][2])) + (0.61 * v.x[2][3])) + (20 * ((((v.x[0][0] + v.x[1][0]) + v.x[2][0]) - 1) ** 2))) + (20 * ((((v.x[0][1] + v.x[1][1]) + v.x[2][1]) - 1) ** 2))) + (20 * ((((v.x[0][2] + v.x[1][2]) + v.x[2][2]) - 1) ** 2))) + (20 * ((((v.x[0][3] + v.x[1][3]) + v.x[2][3]) - 1) ** 2))) + (20 * ((((((((1 - v.x[0][0]) * (1 - v.x[0][1])) * (1 - v.x[0][2])) * (1 - v.x[0][3])) + ((((1 - v.x[1][0]) * (1 - v.x[1][1])) * (1 - v.x[1][2])) * (1 - v.x[1][3]))) + ((((1 - v.x[2][0]) * (1 - v.x[2][1])) * (1 - v.x[2][2])) * (1 - v.x[2][3]))) - 1) ** 2))), params[i]);
    apply_to_all(lambda(q) {
      RX(params[5 + i], q);
    }, v);
  }
}
