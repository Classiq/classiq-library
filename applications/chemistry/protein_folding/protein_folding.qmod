qstruct QAOAVars {
  f: qbit[6];
  interaction: qbit[1];
}

qfunc main(params: real[10], output v: QAOAVars) {
  allocate(v.size, v);
  hadamard_transform(v);
  repeat (i: 5) {
    phase (-((((v.interaction[0] * ((((300 * ((((((-(((v.f[0] * v.f[1]) - (v.f[2] * v.f[3])) ** 2)) - ((((1 - v.f[0]) * (1 - v.f[1])) - ((1 - v.f[2]) * (1 - v.f[3]))) ** 2)) - ((((v.f[0] * (1 - v.f[1])) - (v.f[2] * (1 - v.f[3]))) + 1) ** 2)) - ((((v.f[1] * (1 - v.f[0])) - (v.f[3] * (1 - v.f[2]))) - 1) ** 2)) + 2) ** 2)) + (300 * ((((((-((((v.f[0] * v.f[1]) - (v.f[2] * v.f[3])) + (v.f[4] * v.f[5])) ** 2)) - ((((v.f[0] * (1 - v.f[1])) - (v.f[2] * (1 - v.f[3]))) + (v.f[4] * (1 - v.f[5]))) ** 2)) - (((((1 - v.f[0]) * (1 - v.f[1])) - ((1 - v.f[2]) * (1 - v.f[3]))) + ((1 - v.f[4]) * (1 - v.f[5]))) ** 2)) - (((((v.f[1] * (1 - v.f[0])) - (v.f[3] * (1 - v.f[2]))) + (v.f[5] * (1 - v.f[4]))) - 1) ** 2)) + 2) ** 2))) + (500 * (((((((((v.f[0] * v.f[1]) - (v.f[2] * v.f[3])) + (v.f[4] * v.f[5])) ** 2) + (((((1 - v.f[0]) * (1 - v.f[1])) - ((1 - v.f[2]) * (1 - v.f[3]))) + ((1 - v.f[4]) * (1 - v.f[5]))) ** 2)) + (((((v.f[0] * (1 - v.f[1])) - (v.f[2] * (1 - v.f[3]))) + (v.f[4] * (1 - v.f[5]))) + 1) ** 2)) + (((((v.f[1] * (1 - v.f[0])) - (v.f[3] * (1 - v.f[2]))) + (v.f[5] * (1 - v.f[4]))) - 1) ** 2)) - 1) ** 2))) - 2600)) + ((500 * (1 - (v.f[0] ** 2))) * (1 - ((1 - v.f[1]) ** 2)))) + ((500 * (1 - ((v.f[0] - v.f[2]) ** 2))) * (1 - ((v.f[1] - v.f[3]) ** 2)))) + ((500 * (1 - ((v.f[2] - v.f[4]) ** 2))) * (1 - ((v.f[3] - v.f[5]) ** 2)))), params[i]);
    apply_to_all(lambda(q) {
      RX(params[5 + i], q);
    }, v);
  }
}
