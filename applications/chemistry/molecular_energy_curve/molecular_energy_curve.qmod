qfunc main(output qbv: qbit[]) {
  allocate<len(molecule_problem_to_hamiltonian(MoleculeProblem {
    mapping = FermionMapping::JORDAN_WIGNER,
    z2_symmetries = True,
    molecule = Molecule {
      atoms = [
        ChemistryAtom {
          element = Element::H,
          position = Position {
            x = 0.0,
            y = 0.0,
            z = 0.0
          }
        },
        ChemistryAtom {
          element = Element::H,
          position = Position {
            x = 0.0,
            y = 0.0,
            z = 3.5
          }
        }
      ],
      spin = 1,
      charge = 0
    },
    freeze_core = True,
    remove_orbitals = []
  })[0].pauli)>(qbv);
  molecule_hartree_fock<MoleculeProblem {
    mapping = FermionMapping::JORDAN_WIGNER,
    z2_symmetries = True,
    molecule = Molecule {
      atoms = [
        ChemistryAtom {
          element = Element::H,
          position = Position {
            x = 0.0,
            y = 0.0,
            z = 0.0
          }
        },
        ChemistryAtom {
          element = Element::H,
          position = Position {
            x = 0.0,
            y = 0.0,
            z = 3.5
          }
        }
      ],
      spin = 1,
      charge = 0
    },
    freeze_core = True,
    remove_orbitals = []
  }>(qbv);
  molecule_ucc<MoleculeProblem {
    mapping = FermionMapping::JORDAN_WIGNER,
    z2_symmetries = True,
    molecule = Molecule {
      atoms = [
        ChemistryAtom {
          element = Element::H,
          position = Position {
            x = 0.0,
            y = 0.0,
            z = 0.0
          }
        },
        ChemistryAtom {
          element = Element::H,
          position = Position {
            x = 0.0,
            y = 0.0,
            z = 3.5
          }
        }
      ],
      spin = 1,
      charge = 0
    },
    freeze_core = True,
    remove_orbitals = []
  }, [1, 2]>(qbv);
}

cscope ```

vqe_result = vqe(
    hamiltonian=molecule_problem_to_hamiltonian(struct_literal(MoleculeProblem,mapping=FermionMapping.JORDAN_WIGNER,z2_symmetries=True,molecule=struct_literal(Molecule,atoms=[struct_literal(ChemistryAtom,element=Element.H,position=struct_literal(Position,x=0.0,y=0.0,z=0.0)),struct_literal(ChemistryAtom,element=Element.H,position=struct_literal(Position,x=0.0,y=0.0,z=3.5))],spin=1,charge=0),freeze_core=True,remove_orbitals=[])), maximize=False,
initial_point=[],
optimizer=Optimizer.COBYLA,
max_iteration=30,
tolerance=0,
step_size=0,
skip_compute_variance=False,
alpha_cvar=1.0,

)
save({'vqe_result': vqe_result})

molecule_result = molecule_ground_state_solution_post_process(struct_literal(MoleculeProblem,mapping=FermionMapping.JORDAN_WIGNER,z2_symmetries=True,molecule=struct_literal(Molecule,atoms=[struct_literal(ChemistryAtom,element=Element.H,position=struct_literal(Position,x=0.0,y=0.0,z=0.0)),struct_literal(ChemistryAtom,element=Element.H,position=struct_literal(Position,x=0.0,y=0.0,z=3.5))],spin=1,charge=0),freeze_core=True,remove_orbitals=[]),vqe_result)
save({'molecule_result': molecule_result})

```
