qstruct BlockEncodedState {
  data: qnum<3>;
  block: qnum<3>;
}

qfunc projector_expanded___0(be: BlockEncodedState, res: qbit) {
  res ^= be.block == 0;
}

qfunc projector_controlled_phase_expanded___0(phase: real, qvar: qbit[6], aux: qbit) {
  within {
    projector_expanded___0(qvar, aux);
  } apply {
    RZ(phase, aux);
  }
}

qfunc load_diagonal_expanded___0(offset: int, diag: real[], ind: qbit, x: qnum<3, False, 0>) {
  if (offset != 0) {
    x += offset;
  }
  ind *= diag[x];
}

qfunc load_banded_diagonals_expanded___0(offsets: int[], diags: real[][], ind: qbit, x: qnum<3, False, 0>, s: qnum<2, False, 0>) {
  repeat (i: 3) {
    control (s == i) {
      load_diagonal_expanded___0(-offsets[i], diags[i], ind, x);
    }
  }
}

qfunc block_encode_banded_expanded___0(offsets: int[], diags: real[][], prep_diag: real[], block: qnum<3, False, 0>, data: qnum<3, False, 0>) {
  s: qnum<2, False, 0>;
  ind: qbit;
  block -> {s, ind};
  within {
    inplace_prepare_state(prep_diag, 0.0, s);
  } apply {
    load_banded_diagonals_expanded___0(offsets, diags, ind, data, s);
  }
  X(ind);
  {s, ind} -> block;
}

qfunc be_qfunc_expanded___0(be: BlockEncodedState) {
  block_encode_banded_expanded___0([(-1), 0, 1], [
    [
      0.0,
      (-1.0),
      (-0.9291),
      (-0.88),
      (-0.8645),
      (-0.8976),
      (-0.9701),
      0.0
    ],
    [
      1.0,
      0.9336,
      0.8755,
      0.8443,
      0.8528,
      0.9039,
      0.9886,
      0.5146
    ],
    [
      (-0.9324),
      (-0.8663),
      (-0.8205),
      (-0.8061),
      (-0.8369),
      (-0.9046),
      (-1.0),
      0.0
    ]
  ], [0.2416, 0.4992, 0.2591, 0], be.block, be.data);
}

qfunc u_0_lambda___0_0_expanded___0(x: qbit[6]) {
  invert {
    be_qfunc_expanded___0(x);
  }
}

qfunc qsvt_step_expanded___0(phase1: real, phase2: real, qvar: qbit[6], aux: qbit) {
  u_0_lambda___0_0_expanded___0(qvar);
  projector_controlled_phase_expanded___0(phase1, qvar, aux);
  invert {
    u_0_lambda___0_0_expanded___0(qvar);
  }
  projector_controlled_phase_expanded___0(phase2, qvar, aux);
}

qfunc qsvt_expanded___0(phase_seq: real[], qvar: qbit[6], aux: qbit) {
  H(aux);
  projector_controlled_phase_expanded___0(phase_seq[0], qvar, aux);
  repeat (index: 50) {
    qsvt_step_expanded___0(phase_seq[(2 * index) + 1], phase_seq[(2 * index) + 2], qvar, aux);
  }
  if (False) {
  } else {
    u_0_lambda___0_0_expanded___0(qvar);
    projector_controlled_phase_expanded___0(phase_seq[101], qvar, aux);
  }
  H(aux);
}

qfunc qsvt_inversion_expanded___0(phase_seq: real[], qvar: qbit[6], aux: qbit) {
  qsvt_expanded___0(phase_seq, qvar, aux);
}

qfunc main(output qsvt_aux: qbit, output data: qnum<3, False, 0>, output block: qnum<3, False, 0>) {
  allocate(1, qsvt_aux);
  allocate(3, block);
  prepare_amplitudes([
    0.6193,
    (-0.3565),
    (-0.435),
    (-0.2763),
    0.1567,
    0.4192,
    0.1533,
    0.0
  ], 0, data);
  be_state: BlockEncodedState;
  within {
    {data, block} -> be_state;
  } apply {
    qsvt_inversion_expanded___0([
      3.0876,
      2.9986,
      2.8668,
      2.7741,
      2.7682,
      2.898,
      3.0818,
      3.2558,
      3.3062,
      3.2557,
      3.1238,
      3.0463,
      3.0335,
      3.1233,
      3.1921,
      3.2338,
      3.1719,
      3.1193,
      3.0636,
      3.1082,
      3.1439,
      3.2066,
      3.1723,
      3.1529,
      3.0867,
      3.1156,
      3.1199,
      3.1877,
      3.1606,
      3.1706,
      3.1026,
      3.131,
      3.1082,
      3.1762,
      3.1443,
      3.1783,
      3.1099,
      3.1465,
      3.1023,
      3.1718,
      3.1304,
      3.1853,
      3.1163,
      3.1648,
      3.101,
      3.1697,
      3.113,
      3.1842,
      3.1157,
      3.1824,
      3.1083,
      3.1083,
      3.1824,
      3.1157,
      3.1842,
      3.113,
      3.1697,
      3.101,
      3.1648,
      3.1163,
      3.1853,
      3.1304,
      3.1718,
      3.1023,
      3.1465,
      3.1099,
      3.1783,
      3.1443,
      3.1762,
      3.1082,
      3.131,
      3.1026,
      3.1706,
      3.1606,
      3.1877,
      3.1199,
      3.1156,
      3.0867,
      3.1529,
      3.1723,
      3.2066,
      3.1439,
      3.1082,
      3.0636,
      3.1193,
      3.1719,
      3.2338,
      3.1921,
      3.1233,
      3.0335,
      3.0463,
      3.1238,
      3.2557,
      3.3062,
      3.2558,
      3.0818,
      2.898,
      2.7682,
      2.7741,
      2.8668,
      2.9986,
      (-314.2132)
    ], be_state, qsvt_aux);
  }
}
