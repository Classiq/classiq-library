qstruct BlockEncodedState {
  data: qnum<3>;
  block: qnum<3>;
}

qfunc projector_expanded___0(be: BlockEncodedState, res: qbit) {
  res ^= be.block == 0;
}

qfunc projector_controlled_phase_expanded___0(phase: real, qvar: qbit[6], aux: qbit) {
  within {
    projector_expanded___0(qvar, aux);
  } apply {
    RZ(phase, aux);
  }
}

qfunc load_diagonal_expanded___0(offset: int, diag: real[], ind: qbit, x: qnum<3, False, 0>) {
  if (offset != 0) {
    x += offset;
  }
  ind *= diag[x];
}

qfunc load_banded_diagonals_expanded___0(offsets: int[], diags: real[][], ind: qbit, x: qnum<3, False, 0>, s: qnum<2, False, 0>) {
  repeat (i: 3) {
    control (s == i) {
      load_diagonal_expanded___0(-offsets[i], diags[i], ind, x);
    }
  }
}

qfunc block_encode_banded_expanded___0(offsets: int[], diags: real[][], prep_diag: real[], block: qnum<3, False, 0>, data: qnum<3, False, 0>) {
  s: qnum<2, False, 0>;
  ind: qbit;
  block -> {s, ind};
  within {
    inplace_prepare_state(prep_diag, 0.0, s);
  } apply {
    load_banded_diagonals_expanded___0(offsets, diags, ind, data, s);
  }
  X(ind);
  {s, ind} -> block;
}

qfunc be_qfunc_expanded___0(be: BlockEncodedState) {
  block_encode_banded_expanded___0([(-1), 0, 1], [
    [
      0.0,
      (-1.0),
      (-0.92909487),
      (-0.87995031),
      (-0.8644966),
      (-0.89756031),
      (-0.97013879),
      0.0
    ],
    [
      1.0,
      0.93363266,
      0.87553168,
      0.84426777,
      0.85279056,
      0.90391868,
      0.98857867,
      0.51456003
    ],
    [
      (-0.93241234),
      (-0.86629952),
      (-0.82047653),
      (-0.8060673),
      (-0.83689632),
      (-0.90456938),
      (-1.0),
      0.0
    ]
  ], [
    0.24162109,
    0.49924346,
    0.25913545,
    0
  ], be.block, be.data);
}

qfunc u_0_lambda___0_0_expanded___0(x: qbit[6]) {
  invert {
    be_qfunc_expanded___0(x);
  }
}

qfunc qsvt_step_expanded___0(phase1: real, phase2: real, qvar: qbit[6], aux: qbit) {
  u_0_lambda___0_0_expanded___0(qvar);
  projector_controlled_phase_expanded___0(phase1, qvar, aux);
  invert {
    u_0_lambda___0_0_expanded___0(qvar);
  }
  projector_controlled_phase_expanded___0(phase2, qvar, aux);
}

qfunc qsvt_expanded___0(phase_seq: real[], qvar: qbit[6], aux: qbit) {
  H(aux);
  projector_controlled_phase_expanded___0(phase_seq[0], qvar, aux);
  repeat (index: 50) {
    qsvt_step_expanded___0(phase_seq[(2 * index) + 1], phase_seq[(2 * index) + 2], qvar, aux);
  }
  if (False) {
  } else {
    u_0_lambda___0_0_expanded___0(qvar);
    projector_controlled_phase_expanded___0(phase_seq[101], qvar, aux);
  }
  H(aux);
}

qfunc qsvt_inversion_expanded___0(phase_seq: real[], qvar: qbit[6], aux: qbit) {
  qsvt_expanded___0(phase_seq, qvar, aux);
}

qfunc main(output qsvt_aux: qbit, output data: qnum<3, False, 0>, output block: qnum<3, False, 0>) {
  allocate(1, qsvt_aux);
  allocate(3, block);
  prepare_amplitudes([
    0.61926271,
    (-0.35648446),
    (-0.43503441),
    (-0.27634156),
    0.15674781,
    0.41921399,
    0.15330585,
    0.0
  ], 0, data);
  be_state: BlockEncodedState;
  within {
    {data, block} -> be_state;
  } apply {
    qsvt_inversion_expanded___0([
      4.6720627,
      3.05767733,
      3.00087116,
      2.98423577,
      3.00463608,
      3.08226562,
      3.15369406,
      3.20984351,
      3.19458202,
      3.16018883,
      3.10326312,
      3.10265784,
      3.11448962,
      3.16621782,
      3.1691165,
      3.17110785,
      3.12305639,
      3.12251345,
      3.11105325,
      3.15754366,
      3.15394653,
      3.17275918,
      3.12613324,
      3.13470479,
      3.10962055,
      3.15772347,
      3.14368443,
      3.1745007,
      3.1238756,
      3.14366187,
      3.1075147,
      3.16155428,
      3.1358908,
      3.17734264,
      3.11913298,
      3.15068648,
      3.10394495,
      3.16672109,
      3.12925153,
      3.18131134,
      3.11380419,
      3.15737583,
      3.10045371,
      3.17324094,
      3.12373172,
      3.18500013,
      3.10633782,
      3.1614518,
      3.09730669,
      3.18492276,
      3.12975993,
      3.12975993,
      3.18492276,
      3.09730669,
      3.1614518,
      3.10633782,
      3.18500013,
      3.12373172,
      3.17324094,
      3.10045371,
      3.15737583,
      3.11380419,
      3.18131134,
      3.12925153,
      3.16672109,
      3.10394495,
      3.15068648,
      3.11913298,
      3.17734264,
      3.1358908,
      3.16155428,
      3.1075147,
      3.14366187,
      3.1238756,
      3.1745007,
      3.14368443,
      3.15772347,
      3.10962055,
      3.13470479,
      3.12613324,
      3.17275918,
      3.15394653,
      3.15754366,
      3.11105325,
      3.12251345,
      3.12305639,
      3.17110785,
      3.1691165,
      3.16621782,
      3.11448962,
      3.10265784,
      3.10326312,
      3.16018883,
      3.19458202,
      3.20984351,
      3.15369406,
      3.08226562,
      3.00463608,
      2.98423577,
      3.00087116,
      3.05767733,
      (-315.77038797)
    ], be_state, qsvt_aux);
  }
}
