qfunc hadamard_transform_expanded___0(target: qbit[5]) {
  repeat (index: 5) {
    H(target[index]);
  }
}

qfunc apply_matrix_expanded___0(q1: qbit, q2: qbit, q3: qbit) {
  temp: qbit[3];
  within {
    {q1, q2, q3} -> temp;
  } apply {
    unitary([
      [1, 0, 0, 0, 0, 0, 0, 0],
      [0, 1, 0, 0, 0, 0, 0, 0],
      [
        0,
        0,
        0.57735027,
        0,
        0,
        0.81649658,
        0,
        0
      ],
      [0, 0, 0, 1, 0, 0, 0, 0],
      [0, 0, 0, 0, 1, 0, 0, 0],
      [
        0,
        0,
        0.81649658,
        0,
        0,
        (-0.57735027),
        0,
        0
      ],
      [0, 0, 0, 0, 0, 0, 1, 0],
      [0, 0, 0, 0, 0, 0, 0, 1]
    ], temp);
  }
}

qfunc apply_U_ab_expanded___0(q: qbit[5]) {
  apply_matrix_expanded___0(q[0], q[1], q[2]);
}

qfunc apply_matrix_expanded___1(q1: qbit, q2: qbit, q3: qbit) {
  temp: qbit[3];
  within {
    {q1, q2, q3} -> temp;
  } apply {
    unitary([
      [1, 0, 0, 0, 0, 0, 0, 0],
      [
        0,
        0.81649658,
        0,
        0,
        0.57735027,
        0,
        0,
        0
      ],
      [0, 0, 1, 0, 0, 0, 0, 0],
      [0, 0, 0, 1, 0, 0, 0, 0],
      [
        0,
        (-0.57735027),
        0,
        0,
        0.81649658,
        0,
        0,
        0
      ],
      [0, 0, 0, 0, 0, 1, 0, 0],
      [0, 0, 0, 0, 0, 0, 1, 0],
      [0, 0, 0, 0, 0, 0, 0, 1]
    ], temp);
  }
}

qfunc apply_U_f_expanded___0(q: qbit[5]) {
  apply_matrix_expanded___1(q[0], q[1], q[2]);
}

qfunc apply_matrix_expanded___2(q1: qbit, q2: qbit, q3: qbit) {
  temp: qbit[3];
  within {
    {q1, q2, q3} -> temp;
  } apply {
    unitary([
      [1, 0, 0, 0, 0, 0, 0, 0],
      [0, 1, 0, 0, 0, 0, 0, 0],
      [
        0,
        0,
        0.70710678,
        0,
        0,
        0.70710678,
        0,
        0
      ],
      [0, 0, 0, 1, 0, 0, 0, 0],
      [0, 0, 0, 0, 1, 0, 0, 0],
      [
        0,
        0,
        0.70710678,
        0,
        0,
        (-0.70710678),
        0,
        0
      ],
      [0, 0, 0, 0, 0, 0, 1, 0],
      [0, 0, 0, 0, 0, 0, 0, 1]
    ], temp);
  }
}

qfunc apply_matrix_expanded___3(q1: qbit, q2: qbit, q3: qbit) {
  temp: qbit[3];
  within {
    {q1, q2, q3} -> temp;
  } apply {
    unitary([
      [1, 0, 0, 0, 0, 0, 0, 0],
      [0, 1, 0, 0, 0, 0, 0, 0],
      [0, 0, 0.5, 0, 0, 0.8660254, 0, 0],
      [0, 0, 0, 1, 0, 0, 0, 0],
      [0, 0, 0, 0, 1, 0, 0, 0],
      [
        0,
        0,
        0.8660254,
        0,
        0,
        (-0.5),
        0,
        0
      ],
      [0, 0, 0, 0, 0, 0, 1, 0],
      [0, 0, 0, 0, 0, 0, 0, 1]
    ], temp);
  }
}

qfunc apply_U_ab_expanded___1(q: qbit[5]) {
  apply_matrix_expanded___2(q[0], q[1], q[3]);
  apply_matrix_expanded___3(q[1], q[2], q[3]);
}

qfunc apply_matrix_expanded___4(q1: qbit, q2: qbit, q3: qbit) {
  temp: qbit[3];
  within {
    {q1, q2, q3} -> temp;
  } apply {
    unitary([
      [1, 0, 0, 0, 0, 0, 0, 0],
      [0, 0.8660254, 0, 0, 0.5, 0, 0, 0],
      [0, 0, 1, 0, 0, 0, 0, 0],
      [0, 0, 0, 1, 0, 0, 0, 0],
      [
        0,
        (-0.5),
        0,
        0,
        0.8660254,
        0,
        0,
        0
      ],
      [0, 0, 0, 0, 0, 1, 0, 0],
      [0, 0, 0, 0, 0, 0, 1, 0],
      [0, 0, 0, 0, 0, 0, 0, 1]
    ], temp);
  }
}

qfunc apply_U_f_expanded___1(q: qbit[5]) {
  apply_matrix_expanded___4(q[0], q[2], q[3]);
}

qfunc apply_matrix_expanded___5(q1: qbit, q2: qbit, q3: qbit) {
  temp: qbit[3];
  within {
    {q1, q2, q3} -> temp;
  } apply {
    unitary([
      [1, 0, 0, 0, 0, 0, 0, 0],
      [0, 1, 0, 0, 0, 0, 0, 0],
      [
        0,
        0,
        0.77459667,
        0,
        0,
        0.63245553,
        0,
        0
      ],
      [0, 0, 0, 1, 0, 0, 0, 0],
      [0, 0, 0, 0, 1, 0, 0, 0],
      [
        0,
        0,
        0.63245553,
        0,
        0,
        (-0.77459667),
        0,
        0
      ],
      [0, 0, 0, 0, 0, 0, 1, 0],
      [0, 0, 0, 0, 0, 0, 0, 1]
    ], temp);
  }
}

qfunc apply_matrix_expanded___6(q1: qbit, q2: qbit, q3: qbit) {
  temp: qbit[3];
  within {
    {q1, q2, q3} -> temp;
  } apply {
    unitary([
      [1, 0, 0, 0, 0, 0, 0, 0],
      [0, 1, 0, 0, 0, 0, 0, 0],
      [
        0,
        0,
        0.63245553,
        0,
        0,
        0.77459667,
        0,
        0
      ],
      [0, 0, 0, 1, 0, 0, 0, 0],
      [0, 0, 0, 0, 1, 0, 0, 0],
      [
        0,
        0,
        0.77459667,
        0,
        0,
        (-0.63245553),
        0,
        0
      ],
      [0, 0, 0, 0, 0, 0, 1, 0],
      [0, 0, 0, 0, 0, 0, 0, 1]
    ], temp);
  }
}

qfunc apply_matrix_expanded___7(q1: qbit, q2: qbit, q3: qbit) {
  temp: qbit[3];
  within {
    {q1, q2, q3} -> temp;
  } apply {
    unitary([
      [1, 0, 0, 0, 0, 0, 0, 0],
      [0, 1, 0, 0, 0, 0, 0, 0],
      [
        0,
        0,
        0.4472136,
        0,
        0,
        0.89442719,
        0,
        0
      ],
      [0, 0, 0, 1, 0, 0, 0, 0],
      [0, 0, 0, 0, 1, 0, 0, 0],
      [
        0,
        0,
        0.89442719,
        0,
        0,
        (-0.4472136),
        0,
        0
      ],
      [0, 0, 0, 0, 0, 0, 1, 0],
      [0, 0, 0, 0, 0, 0, 0, 1]
    ], temp);
  }
}

qfunc apply_U_ab_expanded___2(q: qbit[5]) {
  apply_matrix_expanded___5(q[0], q[1], q[4]);
  apply_matrix_expanded___6(q[1], q[2], q[4]);
  apply_matrix_expanded___7(q[2], q[3], q[4]);
}

qfunc apply_matrix_expanded___8(q1: qbit, q2: qbit, q3: qbit) {
  temp: qbit[3];
  within {
    {q1, q2, q3} -> temp;
  } apply {
    unitary([
      [1, 0, 0, 0, 0, 0, 0, 0],
      [
        0,
        0.89442719,
        0,
        0,
        0.4472136,
        0,
        0,
        0
      ],
      [0, 0, 1, 0, 0, 0, 0, 0],
      [0, 0, 0, 1, 0, 0, 0, 0],
      [
        0,
        (-0.4472136),
        0,
        0,
        0.89442719,
        0,
        0,
        0
      ],
      [0, 0, 0, 0, 0, 1, 0, 0],
      [0, 0, 0, 0, 0, 0, 1, 0],
      [0, 0, 0, 0, 0, 0, 0, 1]
    ], temp);
  }
}

qfunc apply_U_f_expanded___2(q: qbit[5]) {
  apply_matrix_expanded___8(q[0], q[3], q[4]);
}

qfunc apply_U_expanded___0(q: qbit[5]) {
  apply_U_ab_expanded___0(q);
  apply_U_f_expanded___0(q);
  control (q[2]) {
    X(q[1]);
  }
  apply_U_ab_expanded___1(q);
  apply_U_f_expanded___1(q);
  control (q[3]) {
    X(q[2]);
  }
  apply_U_ab_expanded___2(q);
  apply_U_f_expanded___2(q);
  control (q[4]) {
    X(q[3]);
  }
}

qfunc apply_MultiCNOT_expanded___0(q: qbit[5]) {
  control (q[0] & q[1]) {
    X(q[2]);
  }
}

qfunc apply_MultiCNOT_expanded___1(q: qbit[5]) {
  control (q[2]) {
    X(q[3]);
  }
}

qfunc apply_MultiCNOT_expanded___2(q: qbit[5]) {
  control (q[0] & q[2]) {
    X(q[4]);
  }
}

qfunc onehot_to_binary_encode_expanded___0(q: qbit[5]) {
  control (q[2]) {
    X(q[1]);
  }
  control (q[2]) {
    X(q[0]);
  }
  apply_MultiCNOT_expanded___0(q);
  control (q[3]) {
    X(q[2]);
  }
  apply_MultiCNOT_expanded___1(q);
  control (q[4]) {
    X(q[2]);
  }
  control (q[4]) {
    X(q[0]);
  }
  apply_MultiCNOT_expanded___2(q);
}

qfunc symmetric_compression_algorithm_expanded___0(q_array: qbit[5]) {
  control (q_array[1]) {
    X(q_array[0]);
  }
  control (q_array[0]) {
    H(q_array[1]);
  }
  apply_U_expanded___0(q_array);
  onehot_to_binary_encode_expanded___0(q_array);
}

qfunc main(output x: qbit[5]) {
  allocate(5, x);
  hadamard_transform_expanded___0(x);
  symmetric_compression_algorithm_expanded___0(x);
}
