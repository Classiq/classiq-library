qfunc prepare_basis_state_expanded___0(output arr: qbit[1]) {
  allocate(1, arr);
  X(arr[0]);
}

qfunc main(output readout: qbit, delta_e: real) {
  state: qbit[1];
  allocate(1, readout);
  prepare_basis_state_expanded___0(state);
  H(readout);
  control (readout) {
    suzuki_trotter(SparsePauliOp {
      terms=[
        SparsePauliTerm {
          paulis=[],
          coefficient=-0.5317
        },
        SparsePauliTerm {
          paulis=[
            IndexedPauli {pauli=3, index=0}
          ],
          coefficient=0.5341
        },
        SparsePauliTerm {
          paulis=[
            IndexedPauli {pauli=1, index=0}
          ],
          coefficient=0.1969
        }
      ],
      num_qubits=1
    }, 1.0, 2, 2, state);
  } else {
    suzuki_trotter(SparsePauliOp {
      terms=[
        SparsePauliTerm {
          paulis=[],
          coefficient=-0.5304
        },
        SparsePauliTerm {
          paulis=[
            IndexedPauli {pauli=3, index=0}
          ],
          coefficient=0.536
        },
        SparsePauliTerm {
          paulis=[
            IndexedPauli {pauli=1, index=0}
          ],
          coefficient=0.1967
        }
      ],
      num_qubits=1
    }, 1.0, 2, 2, state);
  }
  PHASE(1.0 * delta_e, readout);
  H(readout);
}
