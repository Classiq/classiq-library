qfunc main(output readout: qbit, delta_e: real) {
  state: qbit[];
  allocate(1, state);
  allocate(1, readout);
  molecule_hartree_fock(MoleculeProblem {
    mapping=FermionMapping::JORDAN_WIGNER,
    z2_symmetries=True,
    molecule=Molecule {
      atoms=[
        ChemistryAtom {
          element=Element::H,
          position=Position {x=0.0, y=0.0, z=0.0}
        },
        ChemistryAtom {
          element=Element::H,
          position=Position {x=0.0, y=0.0, z=0.9988}
        }
      ],
      spin=1,
      charge=0
    },
    freeze_core=True,
    remove_orbitals=[]
  }, state);
  H(readout);
  control (readout) {
    suzuki_trotter([
      PauliTerm {
        pauli=[Pauli::I],
        coefficient=-1.0602
      },
      PauliTerm {
        pauli=[Pauli::Z],
        coefficient=-0.5341
      },
      PauliTerm {
        pauli=[Pauli::X],
        coefficient=0.1969
      }
    ], 1.0, 2, 2, state);
  } else {
    suzuki_trotter([
      PauliTerm {
        pauli=[Pauli::I],
        coefficient=-1.0603
      },
      PauliTerm {
        pauli=[Pauli::Z],
        coefficient=-0.536
      },
      PauliTerm {
        pauli=[Pauli::X],
        coefficient=0.1967
      }
    ], 1.0, 2, 2, state);
  }
  PHASE(delta_e * 1.0, readout);
  H(readout);
}
