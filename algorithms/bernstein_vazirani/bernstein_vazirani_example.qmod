qperm bv_predicate(a: int, const x: qbit[], res: qbit) {
  repeat (i: x.len) {
    if ((floor(a / (2 ** i)) % 2) == 1) {
      CX(x[i], res);
    }
  }
}

qfunc bv_function(a: int, x: qbit[]) {
  aux: qbit;
  allocate(aux);
  within {
    hadamard_transform(x);
  } apply {
    within {
      X(aux);
      H(aux);
    } apply {
      bv_predicate(a, x, aux);
    }
  }
  free(aux);
}

qfunc main(output x: qnum<5>) {
  allocate(x);
  bv_function(13, x);
}
