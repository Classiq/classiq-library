qfunc suzuki_trotter1_with_power_logic<hamiltonian: PauliTerm[], pw: int, r0: int, reps_scaling_factor: real, evolution_coefficient: real>(target: qbit[]) {
  suzuki_trotter<hamiltonian, evolution_coefficient * pw, 1, r0 * ceiling(reps_scaling_factor ** log(pw, 2))>(target);
}

qfunc simple_eig_inv(phase: qnum, output indicator: qbit) {
  allocate<1>(indicator);
  indicator *= (1 / (2 ** phase.size)) / phase;
}

qfunc my_matrix_inversion_flexible<unitary_with_power: qfunc <arg0: int>(arg1: qbit[]), precision: int>(state: qbit[], output indicator: qbit) {
  phase: qnum;
  allocate_num<precision, False, precision>(phase);
  within {
    qpe_flexible<lambda<k>() {
      unitary_with_power<k>(state);
    }>(phase);
  } apply {
    simple_eig_inv(phase, indicator);
  }
}

qfunc main(output res: qbit[floor(log(4, 2))], output indicator: qbit) {
  prepare_amplitudes<[
    0.18257418583505536,
    0.3651483716701107,
    0.7302967433402214,
    0.5477225575051661
  ], 0.0>(res);
  my_matrix_inversion_flexible<lambda<pw>(arg1) {
    suzuki_trotter1_with_power_logic<[
      PauliTerm {
        pauli=[Pauli::I, Pauli::I],
        coefficient=0.4075
      },
      PauliTerm {
        pauli=[Pauli::I, Pauli::Z],
        coefficient=-0.05249999999999999
      },
      PauliTerm {
        pauli=[Pauli::I, Pauli::X],
        coefficient=-0.030000000000000002
      },
      PauliTerm {
        pauli=[Pauli::Z, Pauli::I],
        coefficient=-0.017499999999999988
      },
      PauliTerm {
        pauli=[Pauli::Z, Pauli::Z],
        coefficient=-0.057499999999999996
      },
      PauliTerm {
        pauli=[Pauli::Z, Pauli::X],
        coefficient=0.02
      },
      PauliTerm {
        pauli=[Pauli::X, Pauli::I],
        coefficient=-0.025
      },
      PauliTerm {
        pauli=[Pauli::X, Pauli::Z],
        coefficient=0.045000000000000005
      },
      PauliTerm {
        pauli=[Pauli::X, Pauli::X],
        coefficient=-0.16
      },
      PauliTerm {
        pauli=[Pauli::Y, Pauli::Y],
        coefficient=-0.06
      }
    ], pw, 4, 1.8, -6.283185307179586>(arg1);
  }, 4>(res, indicator);
}
