qstruct GQSPState {
  data: qnum<2>;
  block: GQSPBlock;
}

qstruct GQSPBlock {
  block_ham: qnum<2>;
  block_gqsp: qbit;
}

qstruct BlockEncodedState {
  data: qnum<2>;
  block: qnum<2>;
}

qfunc _gqsp_r_gate_expanded___0(theta: real, phi: real, _lambda: real, q: qbit) {
  within {
    X(q);
  } apply {
    U(2 * theta, phi, _lambda, 0, q);
  }
  Z(q);
}

qperm cases_0_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9: IndexedPauli[], i_captured__apply_pauli_term__9: int, const x_captured__apply_pauli_term__9: qbit[2]) {
  IDENTITY(x_captured__apply_pauli_term__9[pauli_string_captured__apply_pauli_term__9[i_captured__apply_pauli_term__9].index]);
}

qperm cases_1_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9: IndexedPauli[], i_captured__apply_pauli_term__9: int, x_captured__apply_pauli_term__9: qbit[2]) {
  X(x_captured__apply_pauli_term__9[pauli_string_captured__apply_pauli_term__9[i_captured__apply_pauli_term__9].index]);
}

qperm cases_2_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9: IndexedPauli[], i_captured__apply_pauli_term__9: int, x_captured__apply_pauli_term__9: qbit[2]) {
  Y(x_captured__apply_pauli_term__9[pauli_string_captured__apply_pauli_term__9[i_captured__apply_pauli_term__9].index]);
}

qperm cases_3_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9: IndexedPauli[], i_captured__apply_pauli_term__9: int, const x_captured__apply_pauli_term__9: qbit[2]) {
  Z(x_captured__apply_pauli_term__9[pauli_string_captured__apply_pauli_term__9[i_captured__apply_pauli_term__9].index]);
}

qperm switch_expanded___0(selector: int, pauli_string_captured__apply_pauli_term__9: IndexedPauli[], i_captured__apply_pauli_term__9: int, x_captured__apply_pauli_term__9: qbit[2]) {
  if (selector == 0) {
    cases_0_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9, i_captured__apply_pauli_term__9, x_captured__apply_pauli_term__9);
  } else {
    if (selector == 1) {
      cases_1_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9, i_captured__apply_pauli_term__9, x_captured__apply_pauli_term__9);
    } else {
      if (selector == 2) {
        cases_2_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9, i_captured__apply_pauli_term__9, x_captured__apply_pauli_term__9);
      } else {
        if (selector == 3) {
          cases_3_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9, i_captured__apply_pauli_term__9, x_captured__apply_pauli_term__9);
        }
      }
    }
  }
}

qfunc apply_pauli_term_expanded___0(pauli_string: IndexedPauli[], x: qbit[2]) {
  repeat (i: 1) {
    switch_expanded___0(pauli_string[i].pauli, pauli_string, i, x);
  }
}

qfunc unitaries_0_lambda___0_0_expanded___0(data_captured__lcu_pauli__6: qbit[2]) {
  apply_pauli_term_expanded___0([
    IndexedPauli {pauli=0, index=0}
  ], data_captured__lcu_pauli__6);
}

qfunc unitaries_1_lambda___0_0_expanded___0(data_captured__lcu_pauli__6: qbit[2]) {
  apply_pauli_term_expanded___0([
    IndexedPauli {pauli=3, index=1}
  ], data_captured__lcu_pauli__6);
}

qperm cases_4_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9: IndexedPauli[], i_captured__apply_pauli_term__9: int, const x_captured__apply_pauli_term__9: qbit[2]) {
  IDENTITY(x_captured__apply_pauli_term__9[pauli_string_captured__apply_pauli_term__9[i_captured__apply_pauli_term__9].index]);
}

qperm cases_5_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9: IndexedPauli[], i_captured__apply_pauli_term__9: int, x_captured__apply_pauli_term__9: qbit[2]) {
  X(x_captured__apply_pauli_term__9[pauli_string_captured__apply_pauli_term__9[i_captured__apply_pauli_term__9].index]);
}

qperm cases_6_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9: IndexedPauli[], i_captured__apply_pauli_term__9: int, x_captured__apply_pauli_term__9: qbit[2]) {
  Y(x_captured__apply_pauli_term__9[pauli_string_captured__apply_pauli_term__9[i_captured__apply_pauli_term__9].index]);
}

qperm cases_7_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9: IndexedPauli[], i_captured__apply_pauli_term__9: int, const x_captured__apply_pauli_term__9: qbit[2]) {
  Z(x_captured__apply_pauli_term__9[pauli_string_captured__apply_pauli_term__9[i_captured__apply_pauli_term__9].index]);
}

qperm switch_expanded___1(selector: int, pauli_string_captured__apply_pauli_term__9: IndexedPauli[], i_captured__apply_pauli_term__9: int, x_captured__apply_pauli_term__9: qbit[2]) {
  if (selector == 0) {
    cases_4_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9, i_captured__apply_pauli_term__9, x_captured__apply_pauli_term__9);
  } else {
    if (selector == 1) {
      cases_5_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9, i_captured__apply_pauli_term__9, x_captured__apply_pauli_term__9);
    } else {
      if (selector == 2) {
        cases_6_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9, i_captured__apply_pauli_term__9, x_captured__apply_pauli_term__9);
      } else {
        if (selector == 3) {
          cases_7_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__9, i_captured__apply_pauli_term__9, x_captured__apply_pauli_term__9);
        }
      }
    }
  }
}

qfunc apply_pauli_term_expanded___1(pauli_string: IndexedPauli[], x: qbit[2]) {
  repeat (i: 2) {
    switch_expanded___1(pauli_string[i].pauli, pauli_string, i, x);
  }
}

qfunc unitaries_2_lambda___0_0_expanded___0(data_captured__lcu_pauli__6: qbit[2]) {
  apply_pauli_term_expanded___1([
    IndexedPauli {pauli=1, index=0},
    IndexedPauli {pauli=1, index=1}
  ], data_captured__lcu_pauli__6);
}

qfunc unitaries_3_lambda___0_0_expanded___0(data_captured__lcu_pauli__6: qbit[2]) {
  apply_pauli_term_expanded___1([
    IndexedPauli {pauli=3, index=0},
    IndexedPauli {pauli=3, index=1}
  ], data_captured__lcu_pauli__6);
}

qfunc apply_phase_table_expanded___0(target: qbit[2]) {
  PHASE(0, target[0]);
  CX(target[0], target[1]);
  PHASE(0, target[1]);
  CX(target[0], target[1]);
  PHASE(0, target[1]);
}

qfunc lcu_expanded___0(block: qnum<2, False, 0>, data_captured__lcu_pauli__6: qbit[2]) {
  within {
    inplace_prepare_state([
      0.533333333333,
      0.133333333333,
      0.066666666667,
      0.266666666667
    ], 0, block);
  } apply {
    repeat (i: 4) {
      control (block == i) {
        if (i == 0) {
          unitaries_0_lambda___0_0_expanded___0(data_captured__lcu_pauli__6);
        } else {
          if (i == 1) {
            unitaries_1_lambda___0_0_expanded___0(data_captured__lcu_pauli__6);
          } else {
            if (i == 2) {
              unitaries_2_lambda___0_0_expanded___0(data_captured__lcu_pauli__6);
            } else {
              if (i == 3) {
                unitaries_3_lambda___0_0_expanded___0(data_captured__lcu_pauli__6);
              }
            }
          }
        }
      }
    }
    apply_phase_table_expanded___0(block);
  }
}

qfunc lcu_pauli_expanded___0(data: qbit[2], block: qnum<2, False, 0>) {
  lcu_expanded___0(block, data);
}

qfunc be_hamiltonian_expanded___0(state: BlockEncodedState) {
  lcu_pauli_expanded___0(state.data, state.block);
}

@disable_perm_check
@disable_const_checks(packed_vars)
qperm reflect_about_zero_expanded___0(const packed_vars: qbit[2]) {
  msbs: qnum<1, False, 0>;
  lsb: qbit;
  packed_vars -> {msbs, lsb};
  within {
    X(lsb);
    H(lsb);
  } apply {
    control (msbs == 0) {
      X(lsb);
    }
  }
  {msbs, lsb} -> packed_vars;
}

qfunc walk_operator_expanded___0(state: BlockEncodedState) {
  be_hamiltonian_expanded___0(state);
  reflect_about_zero_expanded___0(state.block);
  phase (pi);
}

qfunc u_0_lambda___0_0_expanded___0(state___data_captured__gqsp_hamiltonian_evolution__1: qnum<2, False, 0>, state___block___block_ham_captured__gqsp_hamiltonian_evolution__1: qnum<2, False, 0>) {
  walk_operator_expanded___0({state___data_captured__gqsp_hamiltonian_evolution__1, state___block___block_ham_captured__gqsp_hamiltonian_evolution__1});
}

qfunc gqsp_expanded___0(aux: qbit, phases: real[][], negative_power: int, state___data_captured__gqsp_hamiltonian_evolution__1: qnum<2, False, 0>, state___block___block_ham_captured__gqsp_hamiltonian_evolution__1: qnum<2, False, 0>) {
  _gqsp_r_gate_expanded___0(phases[0][0], phases[1][0], phases[2][0], aux);
  repeat (index: 76) {
    if ((index + 1) <= (76 - negative_power)) {
      control (aux == 0) {
        u_0_lambda___0_0_expanded___0(state___data_captured__gqsp_hamiltonian_evolution__1, state___block___block_ham_captured__gqsp_hamiltonian_evolution__1);
      }
    } else {
      control (aux == 1) {
        invert {
          u_0_lambda___0_0_expanded___0(state___data_captured__gqsp_hamiltonian_evolution__1, state___block___block_ham_captured__gqsp_hamiltonian_evolution__1);
        }
      }
    }
    _gqsp_r_gate_expanded___0(phases[0][index + 1], phases[1][index + 1], phases[2][index + 1], aux);
  }
}

qfunc gqsp_hamiltonian_evolution_expanded___0(gqsp_expcos_phases: real[][], state: GQSPState) {
  gqsp_expanded___0(state.block.block_gqsp, gqsp_expcos_phases, 38, state.data, state.block.block_ham);
}

qfunc main(output data: qnum<2, False, 0>, output block: qnum<3, False, 0>) {
  state: GQSPState;
  allocate(5, state);
  inplace_prepare_amplitudes([
    0.619012781245,
    0.772954255455,
    0.112027779938,
    0.082551027563
  ], 0.0, state.data);
  gqsp_hamiltonian_evolution_expanded___0([
    [
      1.2e-11,
      5.2e-11,
      2.32e-10,
      9.56e-10,
      3.815e-09,
      1.477e-08,
      5.5272e-08,
      1.99613e-07,
      6.94782e-07,
      2.326875e-06,
      7.484537e-06,
      2.3075182e-05,
      6.8034244e-05,
      0.000191335772,
      0.000511771058,
      0.001297451769,
      0.003105353129,
      0.006983322417,
      0.014668736582,
      0.028564265504,
      0.051034450158,
      0.082395646755,
      0.117396450957,
      0.142046080109,
      0.136021661998,
      0.084775140535,
      0.003920828906,
      0.090434434369,
      0.115485877131,
      0.048022833562,
      0.063608079827,
      0.109138707566,
      0.028167491223,
      0.088864832334,
      0.081567942292,
      0.049685659221,
      0.099457872331,
      0.025768568526,
      0.102548208039,
      0.025768568525,
      0.09945787233,
      0.049685659223,
      0.081567942295,
      0.088864832331,
      0.028167491219,
      0.10913870757,
      0.063608079823,
      0.048022833559,
      0.115485877131,
      0.09043443437,
      0.003920828903,
      0.084775140532,
      0.136021661999,
      0.14204608011,
      0.117396450954,
      0.082395646757,
      0.051034450158,
      0.028564265502,
      0.014668736584,
      0.006983322417,
      0.003105353127,
      0.001297451771,
      0.000511771057,
      0.000191335769,
      6.8034245e-05,
      2.3075183e-05,
      7.484535e-06,
      2.326875e-06,
      6.94784e-07,
      1.99611e-07,
      5.5271e-08,
      1.4772e-08,
      3.816e-09,
      9.54e-10,
      2.31e-10,
      5.4e-11,
      1.570796326783
    ],
    [
      0.0,
      0.0,
      (-1.575391103554),
      (-1.572487887453),
      (-1.570464225703),
      (-1.570699584815),
      (-1.570825792499),
      (-1.570801232088),
      (-1.570793422869),
      (-1.570796258609),
      (-1.570796614077),
      (-1.570796283359),
      (-1.570796303097),
      (-1.570796337838),
      (-1.570796327054),
      (-1.570796325018),
      (-1.570796327386),
      (-1.5707963269),
      (-1.570796326613),
      (-1.570796326866),
      (-1.570796326807),
      (-1.570796326759),
      (-1.570796326822),
      (-1.57079632679),
      (-1.570796326769),
      1.570796327359,
      (-1.570796327399),
      (-1.570796326776),
      (-1.570796326771),
      1.570796326806,
      (-1.570796326857),
      (-1.570796326669),
      1.570796326722,
      (-1.570796326846),
      1.57079632679,
      (-1.570796326757),
      1.570796326809,
      (-1.570796326822),
      1.57079632679,
      (-1.570796326786),
      1.570796326795,
      (-1.570796326796),
      1.570796326795,
      (-1.570796326795),
      1.570796326795,
      1.570796326795,
      (-1.570796326795),
      1.570796326795,
      1.570796326795,
      1.570796326795,
      (-1.570796326795),
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      1.570796326795,
      3.14159265359,
      0.0,
      0.0
    ],
    [
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0,
      0.0
    ]
  ], state);
  state -> {data, block};
}
