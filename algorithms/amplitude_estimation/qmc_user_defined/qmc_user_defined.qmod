qfunc load_probabilities(state: qbit[]) {
  inplace_prepare_state<[
    0.0,
    0.0357142857,
    0.0714285714,
    0.1071428571,
    0.1428571429,
    0.1785714286,
    0.2142857143,
    0.25
  ], 0>(state);
}

qfunc amplitude_loading(io: qbit[], ind: qbit) {
  linear_pauli_rotations<[2], [0.5], [0.4]>(io, ind);
}

qfunc state_loading(io: qbit[], ind: qbit) {
  load_probabilities(io);
  amplitude_loading(io, ind);
}

qfunc good_state_oracle(ind: qbit) {
  Z(ind);
}

qfunc prepare_minus(q: qbit) {
  X(q);
  H(q);
}

qfunc zero_oracle(x: qnum, ind: qbit) {
  within {
    prepare_minus(ind);
  } apply {
    control (x == 0) {
      X(ind);
    }
  }
}

qfunc my_grover_operator(state: qbit[]) {
  io: qbit[state.len - 1];
  ind: qbit;
  state -> {ind, io};
  good_state_oracle(ind);
  within {
    invert {
      state_loading(io, ind);
    }
  } apply {
    zero_oracle(io, ind);
  }
  U<0, 0, 0, 3.1415926536>(ind);
  {ind, io} -> state;
}

qfunc main(output phase: qnum) {
  io: qbit[];
  ind: qbit;
  allocate<3>(io);
  allocate<1>(ind);
  state_loading(io, ind);
  state: qbit[];
  {ind, io} -> state;
  allocate_num<3, False, 3>(phase);
  qpe<lambda() {
    my_grover_operator(state);
  }>(phase);
  state -> {ind, io};
}
