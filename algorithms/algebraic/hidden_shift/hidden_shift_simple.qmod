qfunc arith_func(vars: qbit[4], res: qbit) {
  res ^= (vars[0] & vars[1]) ^ (vars[2] & vars[3]);
}

qfunc arith_func_shifted(vars: qbit[4], res: qbit) {
  res ^= ((vars[0] ^ 1) & vars[1]) ^ (vars[2] & vars[3]);
}

qfunc hidden_shift(oracle: qfunc (qbit[]), oracle_shifted: qfunc (qbit[]), target: qbit[]) {
  hadamard_transform(target);
  oracle_shifted(target);
  hadamard_transform(target);
  oracle(target);
  hadamard_transform(target);
}

qfunc main(output s: qbit[]) {
  allocate(4, s);
  hidden_shift(lambda(y) {
    phase_oracle(arith_func, y);
  }, lambda(y) {
    phase_oracle(arith_func_shifted, y);
  }, s);
}
