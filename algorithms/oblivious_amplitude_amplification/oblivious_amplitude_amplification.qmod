qfunc cases_0_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__7: IndexedPauli[], i_captured__apply_pauli_term__7: int, const x_captured__apply_pauli_term__7: qbit[2]) {
  IDENTITY(x_captured__apply_pauli_term__7[pauli_string_captured__apply_pauli_term__7[i_captured__apply_pauli_term__7].index]);
}

qfunc cases_1_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__7: IndexedPauli[], i_captured__apply_pauli_term__7: int, permutable x_captured__apply_pauli_term__7: qbit[2]) {
  X(x_captured__apply_pauli_term__7[pauli_string_captured__apply_pauli_term__7[i_captured__apply_pauli_term__7].index]);
}

qfunc cases_2_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__7: IndexedPauli[], i_captured__apply_pauli_term__7: int, permutable x_captured__apply_pauli_term__7: qbit[2]) {
  Y(x_captured__apply_pauli_term__7[pauli_string_captured__apply_pauli_term__7[i_captured__apply_pauli_term__7].index]);
}

qfunc cases_3_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__7: IndexedPauli[], i_captured__apply_pauli_term__7: int, const x_captured__apply_pauli_term__7: qbit[2]) {
  Z(x_captured__apply_pauli_term__7[pauli_string_captured__apply_pauli_term__7[i_captured__apply_pauli_term__7].index]);
}

qfunc switch_expanded___0(selector: int, pauli_string_captured__apply_pauli_term__7: IndexedPauli[], i_captured__apply_pauli_term__7: int, permutable x_captured__apply_pauli_term__7: qbit[2]) {
  if (selector == 0) {
    cases_0_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__7, i_captured__apply_pauli_term__7, x_captured__apply_pauli_term__7);
  } else {
    if (selector == 1) {
      cases_1_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__7, i_captured__apply_pauli_term__7, x_captured__apply_pauli_term__7);
    } else {
      if (selector == 2) {
        cases_2_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__7, i_captured__apply_pauli_term__7, x_captured__apply_pauli_term__7);
      } else {
        if (selector == 3) {
          cases_3_lambda___0_0_expanded___0(pauli_string_captured__apply_pauli_term__7, i_captured__apply_pauli_term__7, x_captured__apply_pauli_term__7);
        }
      }
    }
  }
}

qfunc apply_pauli_term_expanded___0(pauli_string: IndexedPauli[], x: qbit[2]) {
  repeat (i: 2) {
    switch_expanded___0(pauli_string[i].pauli, pauli_string, i, x);
  }
}

qfunc unitaries_0_lambda___0_0_expanded___0(data_captured__lcu_pauli__4: qbit[2]) {
  apply_pauli_term_expanded___0([
    IndexedPauli {pauli=3, index=0},
    IndexedPauli {pauli=1, index=1}
  ], data_captured__lcu_pauli__4);
}

qfunc unitaries_1_lambda___0_0_expanded___0(data_captured__lcu_pauli__4: qbit[2]) {
  apply_pauli_term_expanded___0([
    IndexedPauli {pauli=1, index=0},
    IndexedPauli {pauli=3, index=1}
  ], data_captured__lcu_pauli__4);
}

qfunc unitaries_2_lambda___0_0_expanded___0(data_captured__lcu_pauli__4: qbit[2]) {
  apply_pauli_term_expanded___0([
    IndexedPauli {pauli=1, index=0},
    IndexedPauli {pauli=1, index=1}
  ], data_captured__lcu_pauli__4);
}

qfunc unitaries_3_lambda___0_0_expanded___0(data_captured__lcu_pauli__4: qbit[2]) {
  apply_pauli_term_expanded___0([
    IndexedPauli {pauli=3, index=0},
    IndexedPauli {pauli=3, index=1}
  ], data_captured__lcu_pauli__4);
}

qfunc apply_phase_table_expanded___0(target: qbit[2]) {
  PHASE(0, target[0]);
  CX(target[0], target[1]);
  PHASE(0, target[1]);
  CX(target[0], target[1]);
  PHASE(0, target[1]);
}

qfunc lcu_expanded___0(block: qnum<2, False, 0>, data_captured__lcu_pauli__4: qbit[2]) {
  within {
    inplace_prepare_state([0.25, 0.25, 0.25, 0.25], 0, block);
  } apply {
    repeat (i: 4) {
      control (block == i) {
        if (i == 0) {
          unitaries_0_lambda___0_0_expanded___0(data_captured__lcu_pauli__4);
        } else {
          if (i == 1) {
            unitaries_1_lambda___0_0_expanded___0(data_captured__lcu_pauli__4);
          } else {
            if (i == 2) {
              unitaries_2_lambda___0_0_expanded___0(data_captured__lcu_pauli__4);
            } else {
              if (i == 3) {
                unitaries_3_lambda___0_0_expanded___0(data_captured__lcu_pauli__4);
              }
            }
          }
        }
      }
    }
    apply_phase_table_expanded___0(block);
  }
}

qfunc lcu_pauli_expanded___0(data: qbit[2], block: qnum<2, False, 0>) {
  lcu_expanded___0(block, data);
}

qfunc block_encode_expanded___0(data: qbit[2], block: qnum<2, False, 0>) {
  lcu_pauli_expanded___0(data, block);
}

qfunc block_encoding_0_lambda___0_0_expanded___0(_block: qnum<2, False, 0>, _data: qbit[2]) {
  block_encode_expanded___0(_block, _data);
}

qfunc block_oracle_expanded___0(const b: qnum<2, False, 0>, permutable res: qbit) {
  res ^= b == 0;
}

qfunc predicate_0_lambda___0_0_expanded___0(const x: qbit[2], permutable res: qbit) {
  block_oracle_expanded___0(x, res);
}

qfunc predicate_1_lambda___0_0_expanded___0(permutable x: qbit, const target_captured__phase_oracle__4: qbit[2]) {
  predicate_0_lambda___0_0_expanded___0(target_captured__phase_oracle__4, x);
}

qfunc _cond_phase_flip_expanded___0(const target: qbit, const target_captured__phase_oracle__4: qbit[2]) unchecked (target)
 {
  within {
    H(target);
  } apply {
    predicate_1_lambda___0_0_expanded___0(target, target_captured__phase_oracle__4);
  }
}

qfunc phase_oracle_expanded___0(const target: qbit[2]) {
  aux: qbit;
  within {
    allocate(1, aux);
    X(aux);
  } apply {
    _cond_phase_flip_expanded___0(aux, target);
  }
}

qfunc oracle_0_lambda___0_0_expanded___0(const b: qbit[2]) {
  phase_oracle_expanded___0(b);
}

qfunc space_transform_0_lambda___0_0_expanded___0(b: qbit[2], data_captured__oblivious_amplitude_amplification__1: qbit[2]) {
  block_encoding_0_lambda___0_0_expanded___0(data_captured__oblivious_amplitude_amplification__1, b);
}

qfunc reflect_about_zero_expanded___0(const packed_vars: qbit[2]) unchecked (packed_vars)
 {
  msbs: qnum<1, False, 0>;
  lsb: qbit;
  packed_vars -> {msbs, lsb};
  within {
    X(lsb);
    H(lsb);
  } apply {
    control (msbs == 0) {
      X(lsb);
    }
  }
  {msbs, lsb} -> packed_vars;
}

qfunc grover_diffuser_expanded___0(packed_vars: qbit[2], data_captured__oblivious_amplitude_amplification__1: qbit[2]) {
  within {
    invert {
      space_transform_0_lambda___0_0_expanded___0(packed_vars, data_captured__oblivious_amplitude_amplification__1);
    }
  } apply {
    reflect_about_zero_expanded___0(packed_vars);
  }
}

qfunc grover_operator_expanded___0(packed_vars: qbit[2], data_captured__oblivious_amplitude_amplification__1: qbit[2]) {
  oracle_0_lambda___0_0_expanded___0(packed_vars);
  grover_diffuser_expanded___0(packed_vars, data_captured__oblivious_amplitude_amplification__1);
  U(0, 0, 0, pi, packed_vars[0]);
}

qfunc oblivious_amplitude_amplification_expanded___0(reps: int, block: qnum<2, False, 0>, data: qbit[2]) {
  block_encoding_0_lambda___0_0_expanded___0(data, block);
  repeat (index: reps) {
    grover_operator_expanded___0(block, data);
  }
}

qfunc main(output data: qnum<2, False, 0>, output block: qnum<2, False, 0>) {
  allocate(2, block);
  prepare_amplitudes([
    0.4709243714124557,
    0.8134303596981152,
    0.0001291583857834318,
    0.3414107052353368
  ], 0, data);
  oblivious_amplitude_amplification_expanded___0(1, block, data);
}
