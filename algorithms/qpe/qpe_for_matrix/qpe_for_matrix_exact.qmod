qfunc unitary_with_power_logic(pw: int, matrix: real[][], target: qbit[]) {
  power (pw) {
    unitary(matrix, target);
  }
}

qfunc main(output phase_result: qnum<7, SIGNED, 7>) {
  state: qbit[];
  prepare_amplitudes([
    0.527825923553952,
    0.585303023025052,
    0.52526673531944,
    0.320803713240682
  ], 0.0, state);
  allocate(phase_result);
  qpe_flexible(lambda(pw) {
    unitary_with_power_logic(pw, [
      [
        (0.402218815117839 + 0.538867894816761j),
        ((-0.498860352603579) + 0.092499449502743j),
        ((-0.495059221552547) + 0.052581975236681j),
        ((-0.076672261530578) + 0.191563264982246j)
      ],
      [
        ((-0.498860352603579) + 0.092499449502743j),
        (0.256682410204758 + 0.504016232020639j),
        ((-0.572100732513661) + 0.059995884249843j),
        (0.238019553155182 - 0.18738174041068j)
      ],
      [
        ((-0.495059221552547) + 0.052581975236681j),
        ((-0.572100732513661) + 0.059995884249843j),
        (0.308082743693706 + 0.567105911720657j),
        (0.058238426351816 + 0.036564222842981j)
      ],
      [
        ((-0.076672261530578) + 0.191563264982246j),
        (0.238019553155182 - 0.18738174041068j),
        (0.058238426351816 + 0.03656422284298j),
        (0.595743362883212 + 0.71135142115705j)
      ]
    ], state);
  }, phase_result);
}
