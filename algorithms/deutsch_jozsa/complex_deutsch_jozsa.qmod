qfunc complex_predicate(x: qnum, res: qbit) {
  res ^= max(x ^ 4, x & 3) >= 4;
}

qfunc prep_minus(output out: qbit) {
  allocate<1>(out);
  X(out);
  H(out);
}

qfunc my_oracle<predicate: qfunc (arg0: qnum, arg1: qbit)>(target: qnum) {
  aux: qbit;
  within {
    prep_minus(aux);
  } apply {
    predicate(target, aux);
  }
}

qfunc deutsch_jozsa<predicate: qfunc (arg0: qnum, arg1: qbit)>(x: qnum) {
  hadamard_transform(x);
  my_oracle<lambda(arg0, arg1) {
    predicate(arg0, arg1);
  }>(x);
  hadamard_transform(x);
}

qfunc main(output x: qnum) {
  allocate<3>(x);
  deutsch_jozsa<lambda(arg0, arg1) {
    complex_predicate(arg0, arg1);
  }>(x);
}
