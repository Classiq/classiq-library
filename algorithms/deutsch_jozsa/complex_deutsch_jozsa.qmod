qfunc prep_minus(output out: qbit) {
  allocate(out);
  X(out);
  H(out);
}

qfunc my_oracle(predicate: qfunc (qnum, qbit), target: qnum) {
  aux: qbit;
  within {
    prep_minus(aux);
  } apply {
    predicate(target, aux);
  }
}

qfunc deutsch_jozsa(predicate: qfunc (qnum, qbit), x: qnum) {
  within {
    hadamard_transform(x);
  } apply {
    my_oracle(lambda(x, y) {
      predicate(x, y);
    }, x);
  }
}

qfunc complex_predicate(const x: qnum, permutable res: qbit) {
  res ^= max(x ^ 4, x & 3) >= 4;
}

qfunc main(output x: qnum<3>) {
  allocate(x);
  deutsch_jozsa(lambda(x, y) {
    complex_predicate(x, y);
  }, x);
}
